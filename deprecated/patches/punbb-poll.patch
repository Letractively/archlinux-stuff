diff -wbBurN upload/footer.php upload.my/footer.php
--- upload/footer.php	2005-07-07 22:44:42 +0400
+++ upload.my/footer.php	2006-12-06 13:58:44 +0300
@@ -67,6 +67,41 @@
 		}
 	}
 }
+else if ($footer_style == 'viewpoll')
+{
+	echo "\n\t\t\t".'<div class="conl">'."\n";
+
+	// Display the "Jump to" drop list
+	if ($pun_config['o_quickjump'] == '1')
+	{
+		// Load cached quickjump
+		@include PUN_ROOT.'cache/cache_quickjump_'.$pun_user['g_id'].'.php';
+		if (!defined('PUN_QJ_LOADED'))
+		{
+			require_once PUN_ROOT.'include/cache.php';
+			generate_quickjump_cache($pun_user['g_id']);
+			require PUN_ROOT.'cache/cache_quickjump_'.$pun_user['g_id'].'.php';
+		}
+	}
+
+	if ($is_admmod)
+	{
+		echo "\t\t\t".'<dl id="modcontrols"><dt><strong>'.$lang_topic['Mod controls'].'</strong></dt><dd><a href="moderatepoll.php?fid='.$forum_id.'&amp;tid='.$id.'&amp;p='.$p.'">'.$lang_common['Delete posts'].'</a></dd>'."\n";
+		echo "\t\t\t".'<dd><a href="moderatepoll.php?fid='.$forum_id.'&amp;move_topics='.$id.'">'.$lang_common['Move topic'].'</a></dd>'."\n";
+
+		if ($cur_topic['closed'] == '1')
+			echo "\t\t\t".'<dd><a href="moderatepoll.php?fid='.$forum_id.'&amp;open='.$id.'">'.$lang_common['Open topic'].'</a></dd>'."\n";
+		else
+			echo "\t\t\t".'<dd><a href="moderatepoll.php?fid='.$forum_id.'&amp;close='.$id.'">'.$lang_common['Close topic'].'</a></dd>'."\n";
+
+		if ($cur_topic['sticky'] == '1')
+			echo "\t\t\t".'<dd><a href="moderatepoll.php?fid='.$forum_id.'&amp;unstick='.$id.'">'.$lang_common['Unstick topic'].'</a></dd></dl>'."\n";
+		else
+			echo "\t\t\t".'<dd><a href="moderatepoll.php?fid='.$forum_id.'&amp;stick='.$id.'">'.$lang_common['Stick topic'].'</a></dd></dl>'."\n";
+	}
+
+	echo "\t\t\t".'</div>'."\n";
+}
 else if ($footer_style == 'viewforum' || $footer_style == 'viewtopic')
 {
 	echo "\n\t\t\t".'<div class="conl">'."\n";
diff -wbBurN upload/include/functions.php upload.my/include/functions.php
--- upload/include/functions.php	2006-10-15 22:36:14 +0400
+++ upload.my/include/functions.php	2006-12-06 14:38:33 +0300
@@ -353,6 +353,7 @@
 	global $db;
 
 	// Delete the topic and any redirect topics
+	$db->query('DELETE FROM '.$db->prefix.'polls WHERE pollid='.$topic_id);
 	$db->query('DELETE FROM '.$db->prefix.'topics WHERE id='.$topic_id.' OR moved_to='.$topic_id) or error('Unable to delete topic', __FILE__, __LINE__, $db->error());
 
 	// Create a list of the post ID's in this topic
@@ -640,6 +641,7 @@
 //
 // Make sure that HTTP_REFERER matches $pun_config['o_base_url']/$script
 //
+/*
 function confirm_referrer($script)
 {
 	global $pun_config, $lang_common;
@@ -647,6 +649,20 @@
 	if (!preg_match('#^'.preg_quote(str_replace('www.', '', $pun_config['o_base_url']).'/'.$script, '#').'#i', str_replace('www.', '', (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''))))
 		message($lang_common['Bad referrer']);
 }
+*/
+function confirm_referrer($script)
+{
+	global $pun_config, $lang_common;
+
+	$base_url = str_replace('www.', '', $pun_config['o_base_url']);
+	$referer = str_replace('www.', '', (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''));
+
+	$base_url = str_replace('https://', 'http://', $base_url);
+	$referer = str_replace('https://', 'http://', $referer);
+
+	if (!preg_match('#^'.preg_quote($base_url.'/'.$script, '#').'#i', $referer))
+		message($lang_common['Bad referrer']);
+}
 
 
 //
diff -wbBurN upload/include/template/help.tpl upload.my/include/template/help.tpl
--- upload/include/template/help.tpl	2005-01-12 00:41:16 +0300
+++ upload.my/include/template/help.tpl	2006-11-24 17:48:24 +0300
@@ -10,6 +10,19 @@
 <div id="punwrap">
 <div id="helpfile" class="pun">
 
+<div id="brdheader" class="block">
+	<div class="box">
+		<div id="brdtitle" class="inbox">
+			<pun_title>
+			<pun_desc>
+		</div>
+		<pun_navlinks>
+		<pun_status>
+	</div>
+</div>
+
+<pun_announcement>
+
 <pun_main>
 
 </div>
diff -wbBurN upload/install_mod.php upload.my/install_mod.php
--- upload/install_mod.php	1970-01-01 03:00:00 +0300
+++ upload.my/install_mod.php	2006-12-06 14:49:08 +0300
@@ -0,0 +1,189 @@
+<?php
+/***********************************************************************/
+
+// Some info about your mod.
+$mod_title      = 'Easy Poll';
+$mod_version    = '1.1.3';
+$release_date   = '07-13-05';
+$author         = 'Caleb Champlin (Mediator)';
+$author_email   = 'med_mediator@hotmail.com';
+
+// One or more versions of PunBB that this mod works on. The version names must match exactly!
+$punbb_versions	= array('1.2.14');
+
+// Set this to false if you haven't implemented the restore function (see below)
+$mod_restore	= false;
+
+
+// This following function will be called when the user presses the "Install" button.
+function install()
+{
+	global $db, $db_type, $pun_config;
+	$db->query("ALTER TABLE ".$db->prefix."topics ADD `question` VARCHAR(255) NOT NULL, ADD `yes` VARCHAR(30) NOT NULL, ADD `no` VARCHAR(30) NOT NULL") or error('Unable to add columns to table', __FILE__, __LINE__, $db->error());
+
+	switch ($db_type)
+	{
+		case 'mysql':
+		case 'mysqli':
+			$sql = 'CREATE TABLE '.$db->prefix."polls (
+					id INT(11) NOT NULL AUTO_INCREMENT,
+					pollid INT(11) NOT NULL default '0',
+					options LONGTEXT NOT NULL,
+					voters LONGTEXT NOT NULL,
+					ptype tinyint(4) NOT NULL default '0',
+					votes LONGTEXT NOT NULL,
+					PRIMARY KEY (id)
+					) TYPE=MyISAM;";
+			break;
+
+		case 'pgsql':
+			$sql = 'CREATE TABLE '.$db->prefix."polls (
+					id SERIAL,
+					pollid INTEGER NOT NULL default 0,
+					options TEXT NOT NULL,
+					voters TEXT NOT NULL,
+					ptype SMALLINT NOT NULL default 0,
+					votes TEXT NOT NULL,
+					PRIMARY KEY (id)
+					)";
+			break;
+
+		case 'sqlite':
+			$sql = 'CREATE TABLE '.$db->prefix."polls (
+					id INTEGER NOT NULL,
+					pollid INTEGER NOT NULL default 0,
+					options TEXT NOT NULL,
+					voters TEXT NOT NULL,
+					ptype INTEGER NOT NULL default 0,
+					votes TEXT NOT NULL,
+					PRIMARY KEY (id)
+					)";
+			break;
+	}
+	$db->query($sql) or error('Unable to create table '.$db->prefix.'polls.',  __FILE__, __LINE__, $db->error());
+	
+	
+	$db->query('INSERT INTO '.$db->prefix."config (conf_name, conf_value) VALUES('poll_max_fields', '10')")	or error('Unable to insert into table '.$db->prefix.'config. Please check your configuration and try again. <a href="JavaScript: history.go(-1)">Go back</a>.', __FILE__, __LINE__, $db->error());
+
+
+	$d = dir(PUN_ROOT.'cache');
+	while (($entry = $d->read()) !== false)
+	{
+		if (substr($entry, strlen($entry)-4) == '.php')
+			@unlink(PUN_ROOT.'cache/'.$entry);
+	}
+
+
+	$db->close();
+}
+
+// This following function will be called when the user presses the "Restore" button (only if $mod_uninstall is true (see above))
+function restore()
+{
+	global $db, $db_type, $pun_config;
+}
+
+/***********************************************************************/
+
+// DO NOT EDIT ANYTHING BELOW THIS LINE!
+
+
+// Circumvent maintenance mode
+define('PUN_TURN_OFF_MAINT', 1);
+define('PUN_ROOT', './');
+require PUN_ROOT.'include/common.php';
+
+// We want the complete error message if the script fails
+if (!defined('PUN_DEBUG'))
+	define('PUN_DEBUG', 1);
+
+// Make sure we are running a PunBB version that this mod works with
+if(!in_array($pun_config['o_cur_version'], $punbb_versions))
+	exit('You are running a version of PunBB ('.$pun_config['o_cur_version'].') that this mod does not support. This mod supports PunBB versions: '.implode(', ', $punbb_versions));
+
+$style = (isset($cur_user)) ? $cur_user['style'] : $pun_config['o_default_style'];
+
+?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+
+<html dir="ltr">
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
+<title><?php echo $mod_title ?> installation</title>
+<link rel="stylesheet" type="text/css" href="style/<?php echo $pun_config['o_default_style'].'.css' ?>" />
+</head>
+<body>
+
+<div id="punwrap">
+<div id="puninstall" class="pun" style="margin: 10% 20% auto 20%">
+
+<?php
+
+if (isset($_POST['form_sent']))
+{
+	if (isset($_POST['install']))
+	{
+		// Run the install function (defined above)
+		install();
+
+?>
+<div class="block">
+	<h2><span>Installation successful</span></h2>
+	<div class="box">
+		<div class="inbox">
+			<p>Your database has been successfully prepared for <?php echo pun_htmlspecialchars($mod_title) ?>. See readme.txt for further instructions.</p>
+		</div>
+	</div>
+</div>
+<?php
+
+	}
+	else
+	{
+		// Run the restore function (defined above)
+		restore();
+
+?>
+<div class="block">
+	<h2><span>Restore successful</span></h2>
+	<div class="box">
+		<div class="inbox">
+			<p>Your database has been successfully restored.</p>
+		</div>
+	</div>
+</div>
+<?php
+
+	}
+}
+else
+{
+
+?>
+<div class="blockform">
+	<h2><span>Mod installation</span></h2>
+	<div class="box">
+		<form method="post" action="<?php echo $_SERVER['PHP_SELF'] ?>?foo=bar">
+			<div><input type="hidden" name="form_sent" value="1" /></div>
+			<div class="inform">
+				<p>This script will update your database to work with the following modification:</p>
+				<p><strong>Mod title:</strong> <?php echo pun_htmlspecialchars($mod_title).' '.$mod_version ?></p>
+				<p><strong>Author:</strong> <?php echo pun_htmlspecialchars($author) ?> (<a href="mailto:<?php echo pun_htmlspecialchars($author_email) ?>"><?php echo pun_htmlspecialchars($author_email) ?></a>)</p>
+				<p><strong>Disclaimer:</strong> Mods are not officially supported by PunBB. Mods generally can't be uninstalled without running SQL queries manually against the database. Make backups of all data you deem necessary before installing.</p>
+<?php if ($mod_restore): ?>				<p>If you've previously installed this mod and would like to uninstall it, you can click the restore button below to restore the database.</p>
+<?php endif; ?>			</div>
+			<p><input type="submit" name="install" value="Install" /><?php if ($mod_restore): ?><input type="submit" name="restore" value="Restore" /><?php endif; ?></p>
+		</form>
+	</div>
+</div>
+<?php
+
+}
+
+?>
+
+</div>
+</div>
+
+</body>
+</html>
\ No newline at end of file
diff -wbBurN upload/lang/English/polls.php upload.my/lang/English/polls.php
--- upload/lang/English/polls.php	1970-01-01 03:00:00 +0300
+++ upload.my/lang/English/polls.php	2006-12-06 15:51:26 +0300
@@ -0,0 +1,41 @@
+<?php
+/***********************************************************************
+
+  Caleb Champlin (med_mediator@hotmail.com)
+
+************************************************************************/
+
+// Language definitions used in viewforum.php
+$lang_polls = array(
+'Poll'	=>	'Poll',
+'New poll'	=>	'Create new poll',
+'New poll legend multiselect'	=>	'Set Info (Mutliselect Poll)',
+'New poll legend yesno'	=>	'Set Info (Multiselect Yes/No Poll)',
+'New poll legend'	=>	'Set Poll Info',
+'Multiselect'	=>	'Mutliselect Poll',
+'Yesno'	=>	'Multiselect Yes/No Poll',
+'Regular'	=>	'Regular Poll',
+'Question'	=>	'Question',
+'Option'	=>	'Option',
+'Optional'	=>	'(Optional)',
+'Yes'	=>	'Yes (True/Agree/Etc) Value',
+'Null vote'	=>	'Null Vote',
+'Poll preview'	=>	'Poll preview',
+'No'	=>	'No (False/Disagree/Etc) Value',
+'Create new poll' => 'Create new poll',
+'Poll select'	=>	'Select poll type',
+'Already voted'	=>	'You have already voted for this poll',
+'Vote success'	=>	'Your vote has been submitted',
+'Empty option'			=>	'Poll has an empty option.',
+'No options'			=>	'Poll must contain options.',
+'Low options'			=>	'Polls must contain two or more options.',
+'No question'			=>	'Polls must contain a question.',
+'Too long question'		=>	'Questions cannot be longer than 70 characters.',
+'No yes'			=>	'This poll must contain a (Yes) value.',
+'Too long yes'		=>	'(Yes) value cannot be longer than 35 characters.',
+'No no'			=>	'This poll must contain a (No) value.',
+'Too long no'		=>	'(No) value cannot be longer than 35 characters.',
+'No message'			=>	'You must enter a message.',
+'Too long message'		=>	'Posts cannot be longer that 65535 characters (64 KB).',
+'Total'			=>	'Total'
+);
diff -wbBurN upload/poll.php upload.my/poll.php
--- upload/poll.php	1970-01-01 03:00:00 +0300
+++ upload.my/poll.php	2006-12-06 14:49:32 +0300
@@ -0,0 +1,820 @@
+<?php
+/***********************************************************************
+
+  Caleb Champlin (med_mediator@hotmail.com)
+
+  This file is is a modification of a file from of PunBB.
+
+************************************************************************/
+
+/***********************************************************************
+
+  Copyright (C) 2002-2005  Rickard Andersson (rickard@punbb.org)
+
+  This file is part of PunBB.
+
+  PunBB is free software; you can redistribute it and/or modify it
+  under the terms of the GNU General Public License as published
+  by the Free Software Foundation; either version 2 of the License,
+  or (at your option) any later version.
+
+  PunBB is distributed in the hope that it will be useful, but
+  WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+  MA  02111-1307  USA
+
+************************************************************************/
+
+define('PUN_ROOT', './');
+require PUN_ROOT . 'include/common.php';
+
+if ($pun_user['g_read_board'] == '0')
+    message($lang_common['No view']);
+
+$tid = isset($_GET['tid']) ? intval($_GET['tid']) : 0;
+$ptype = isset($_POST['ptype']) ? intval($_POST['ptype']) : 0;
+$fid = isset($_GET['fid']) ? intval($_GET['fid']) : 0;
+if ($tid < 1 && $fid < 1)
+	message($lang_common['Bad request']);
+
+// Fetch some info about the topic and/or the forum
+if ($tid)
+	$result = $db->query('SELECT f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.subject, t.closed, t.question FROM '.$db->prefix.'topics AS t INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$tid) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());
+else
+	$result = $db->query('SELECT f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics FROM ' . $db->prefix . 'forums AS f LEFT JOIN ' . $db->prefix . 'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id=' . $pun_user['g_id'] . ') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.id=' . $fid) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());
+
+if (!$db->num_rows($result))
+    message($lang_common['Bad request']);
+
+$cur_posting = $db->fetch_assoc($result);
+
+if ($cur_posting['redirect_url'] != '')
+    message($lang_common['Bad request']);
+// Get Mods/Admin etc etc
+$mods_array = ($cur_posting['moderators'] != '') ? unserialize($cur_posting['moderators']) : array();
+$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_id'] == PUN_MOD && array_key_exists($pun_user['username'], $mods_array))) ? true : false;
+// Verify Permissions
+// Do we have permission to post?
+if ((($tid && (($cur_posting['post_replies'] == '' && $pun_user['g_post_replies'] == '0') || $cur_posting['post_replies'] == '0')) ||
+	($fid && (($cur_posting['post_topics'] == '' && $pun_user['g_post_topics'] == '0') || $cur_posting['post_topics'] == '0')) ||
+	(isset($cur_posting['closed']) && $cur_posting['closed'] == '1')) &&
+	!$is_admmod)
+    message($lang_common['No permission']);
+// Load the language files
+require PUN_ROOT . 'lang/' . $pun_user['language'] . '/post.php';
+require PUN_ROOT . 'lang/' . $pun_user['language'] . '/polls.php';
+// Create empty errors array
+$errors = array();
+
+if (isset($_POST['form_sent'])) {
+    // Make sure form_user is correct
+    if (($pun_user['is_guest'] && $_POST['form_user'] != 'Guest') || (!$pun_user['is_guest'] && $_POST['form_user'] != $pun_user['username']))
+        message($lang_common['Bad request']);
+
+    
+        // Flood protection
+        if (!$pun_user['is_guest'] && !isset($_POST['preview']) && $pun_user['last_post'] != '' && (time() - $pun_user['last_post']) < $pun_user['g_post_flood'])
+            $errors[] = $lang_post['Flood start'] . ' ' . $pun_user['g_post_flood'] . ' ' . $lang_post['flood end']; 
+        // It's a new topic
+	// If it's a new topic
+	if ($fid)
+	{
+	if (!empty($_POST['create_poll'])) {
+        $subject = pun_trim($_POST['req_subject']);
+
+        if ($subject == '')
+            $errors[] = $lang_post['No subject'];
+        else if (pun_strlen($subject) > 70)
+            $errors[] = $lang_post['Too long subject'];
+        else if ($pun_config['p_subject_all_caps'] == '0' && strtoupper($subject) == $subject && ($pun_user['g_id'] > PUN_MOD && !$pun_user['g_global_moderation']))
+            $subject = ucwords(strtolower($subject)); 
+        // Get the question
+        $question = pun_trim($_POST['req_question']);
+        if ($question == '')
+            $errors[] = $lang_polls['No question'];
+        else if (pun_strlen($question) > 70)
+            $errors[] = $lang_polls['Too long question'];
+        else if ($pun_config['p_subject_all_caps'] == '0' && strtoupper($question) == $question && ($pun_user['g_id'] > PUN_MOD && !$pun_user['g_global_moderation']))
+            $question = ucwords(strtolower($question)); 
+        // If its a multislect yes/no poll then we need to make sure they have the right values
+        if ($ptype == 3) {
+            $yesval = pun_trim($_POST['poll_yes']);
+
+            if ($yesval == '')
+                $errors[] = $lang_polls['No yes'];
+            else if (pun_strlen($yesval) > 35)
+                $errors[] = $lang_polls['Too long yes'];
+            else if ($pun_config['p_subject_all_caps'] == '0' && strtoupper($yesval) == $yesval && ($pun_user['g_id'] > PUN_MOD && !$pun_user['g_global_moderation']))
+                $yesval = ucwords(strtolower($yesval));
+
+            $noval = pun_trim($_POST['poll_no']);
+
+            if ($noval == '')
+                $errors[] = $lang_polls['No no'];
+            else if (pun_strlen($noval) > 35)
+                $errors[] = $lang_polls['Too long no'];
+            else if ($pun_config['p_subject_all_caps'] == '0' && strtoupper($noval) == $noval && ($pun_user['g_id'] > PUN_MOD && !$pun_user['g_global_moderation']))
+                $noval = ucwords(strtolower($noval));
+        } 
+        // This isn't exactly a good way todo it, but it works. I may rethink this code later
+        $option = array();
+        $lastoption = "null";
+        while (list($key, $value) = each($_POST['poll_option'])) {
+	    $value = pun_trim($value);
+            if ($value != "") {
+                if ($lastoption == '')
+                    $errors[] = $lang_polls['Empty option'];
+                else {
+                    $option[$key] = pun_trim($value);
+                    if (pun_strlen($option[$key]) > 55)
+                        $errors[] = $lang_polls['Too long option'];
+		    else if ($key > $pun_config['poll_max_fields'])
+			message($lang_common['Bad request']);
+                    else if ($pun_config['p_subject_all_caps'] == '0' && strtoupper($option[$key]) == $option[$key] && ($pun_user['g_id'] > PUN_MOD && !$pun_user['g_global_moderation']))
+                        $option[$key] = ucwords(strtolower($option[$key]));
+                } 
+            } 
+            $lastoption = pun_trim($value);
+        } 
+
+	  // People are naughty
+	  if (empty($option))
+		$errors[] = $lang_polls['No options'];
+
+	  if (!array_key_exists(2,$option))
+		$errors[] = $lang_polls['Low options'];
+	 }
+	}
+        // If the user is logged in we get the username and e-mail from $pun_user
+        if (!$pun_user['is_guest']) {
+            $username = $pun_user['username'];
+            $email = $pun_user['email'];
+        } 
+        // Otherwise it should be in $_POST
+        else {
+            $username = trim($_POST['req_username']);
+            $email = strtolower(trim(($pun_config['p_force_guest_email'] == '1') ? $_POST['req_email'] : $_POST['email'])); 
+            // Load the register.php/profile.php language files
+            require PUN_ROOT . 'lang/' . $pun_user['language'] . '/prof_reg.php';
+            require PUN_ROOT . 'lang/' . $pun_user['language'] . '/register.php'; 
+            // It's a guest, so we have to validate the username
+            if (strlen($username) < 2)
+                $errors[] = $lang_prof_reg['Username too short'];
+            else if (!strcasecmp($username, 'Guest') || !strcasecmp($username, $lang_common['Guest']))
+                $errors[] = $lang_prof_reg['Username guest'];
+            else if (preg_match('/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/', $username))
+                $errors[] = $lang_prof_reg['Username IP'];
+
+            if ((strpos($username, '[') !== false || strpos($username, ']') !== false) && strpos($username, '\'') !== false && strpos($username, '"') !== false)
+                $errors[] = $lang_prof_reg['Username reserved chars'];
+            if (preg_match('#\[b\]|\[/b\]|\[u\]|\[/u\]|\[i\]|\[/i\]|\[color|\[/color\]|\[quote\]|\[quote=|\[/quote\]|\[code\]|\[/code\]|\[img\]|\[/img\]|\[url|\[/url\]|\[email|\[/email\]#i', $username))
+                $errors[] = $lang_prof_reg['Username BBCode']; 
+            // Check username for any censored words
+            $temp = censor_words($username);
+            if ($temp != $username)
+                $errors[] = $lang_register['Username censor']; 
+            // Check that the username (or a too similar username) is not already registered
+            $result = $db->query('SELECT username FROM ' . $db->prefix . 'users WHERE username=\'' . $db->escape($username) . '\' OR username=\'' . $db->escape(preg_replace('/[^\w]/', '', $username)) . '\'') or error('Unable to fetch user info', __FILE__, __LINE__, $db->error());
+            if ($db->num_rows($result)) {
+                $busy = $db->result($result);
+                $errors[] = $lang_register['Username dupe 1'] . ' ' . pun_htmlspecialchars($busy) . '. ' . $lang_register['Username dupe 2'];
+            } 
+
+            if ($pun_config['p_force_guest_email'] == '1' || $email != '') {
+                require PUN_ROOT . 'include/email.php';
+                if (!is_valid_email($email))
+                    $errors[] = $lang_common['Invalid e-mail'];
+            } 
+        } 
+        // Clean up message from POST
+        $message = pun_linebreaks(pun_trim($_POST['req_message'])); 
+        if ($message == '')
+        	$errors[] = $lang_post['No message'];
+        else if (strlen($message) > 65535)
+            $errors[] = $lang_post['Too long message'];
+        else if ($pun_config['p_message_all_caps'] == '0' && strtoupper($message) == $message && ($pun_user['g_id'] > PUN_MOD && !$pun_user['g_global_moderation']))
+            $message = ucwords(strtolower($message)); 
+        // Validate BBCode syntax
+        if ($pun_config['p_message_bbcode'] == '1' && strpos($message, '[') !== false && strpos($message, ']') !== false) {
+            require PUN_ROOT . 'include/parser.php';
+            $message = preparse_bbcode($message, $errors);
+        } 
+
+        require PUN_ROOT . 'include/search_idx.php';
+
+        $hide_smilies = isset($_POST['hide_smilies']) ? 1 : 0;
+        $subscribe = isset($_POST['subscribe']) ? 1 : 0;
+
+        $now = time(); 
+        // Did everything go according to plan?
+        if (empty($errors) && !isset($_POST['preview'])) {
+	// If it's a reply
+		if ($tid)
+		{
+			if (!$pun_user['is_guest'])
+			{
+				// Insert the new post
+				$db->query('INSERT INTO '.$db->prefix.'posts (poster, poster_id, poster_ip, message, hide_smilies, posted, topic_id) VALUES(\''.$db->escape($username).'\', '.$pun_user['id'].', \''.get_remote_address().'\', \''.$db->escape($message).'\', \''.$hide_smilies.'\', '.$now.', '.$tid.')') or error('Unable to create post', __FILE__, __LINE__, $db->error());
+				$new_pid = $db->insert_id();
+
+			}
+			else
+			{
+				// It's a guest. Insert the new post
+				$email_sql = ($pun_config['p_force_guest_email'] == '1' || $email != '') ? '\''.$email.'\'' : 'NULL';
+				$db->query('INSERT INTO '.$db->prefix.'posts (poster, poster_ip, poster_email, message, hide_smilies, posted, topic_id) VALUES(\''.$db->escape($username).'\', \''.get_remote_address().'\', '.$email_sql.', \''.$db->escape($message).'\', \''.$hide_smilies.'\', '.$now.', '.$tid.')') or error('Unable to create post', __FILE__, __LINE__, $db->error());
+				$new_pid = $db->insert_id();
+			}
+
+			// Count number of replies in the topic
+			$result = $db->query('SELECT COUNT(id) FROM '.$db->prefix.'posts WHERE topic_id='.$tid) or error('Unable to fetch post count for topic', __FILE__, __LINE__, $db->error());
+			$num_replies = $db->result($result, 0) - 1;
+
+			// Update topic
+			$db->query('UPDATE '.$db->prefix.'topics SET num_replies='.$num_replies.', last_post='.$now.', last_post_id='.$new_pid.', last_poster=\''.$db->escape($username).'\' WHERE id='.$tid) or error('Unable to update topic', __FILE__, __LINE__, $db->error());
+
+			update_search_index('post', $new_pid, $message);
+
+			update_forum($cur_posting['id']);
+
+			// Should we send out notifications?
+			if ($pun_config['o_subscriptions'] == '1')
+			{
+
+			// Get the post time for the previous post in this topic
+			$result = $db->query('SELECT posted FROM '.$db->prefix.'posts WHERE topic_id='.$tid.' ORDER BY id DESC LIMIT 1, 1') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());
+			$previous_post_time = $db->result($result);
+
+			}
+		}
+		// If it's a new topic
+		else if ($fid)
+		{
+            // Create the topic
+            if ($ptype == 3) {
+                $db->query('INSERT INTO ' . $db->prefix . 'topics (poster, subject, posted, last_post, last_poster, forum_id, question, yes, no) VALUES(\'' . $db->escape($username) . '\', \'' . $db->escape($subject) . '\', ' . $now . ', ' . $now . ', \'' . $db->escape($username) . '\', ' . $fid . ', \'' . $db->escape($question) . '\', \'' . $db->escape($yesval) . '\', \'' . $db->escape($noval) . '\')') or error('Unable to create topic', __FILE__, __LINE__, $db->error());
+            } else {
+                $db->query('INSERT INTO ' . $db->prefix . 'topics (poster, subject, posted, last_post, last_poster, forum_id, question) VALUES(\'' . $db->escape($username) . '\', \'' . $db->escape($subject) . '\', ' . $now . ', ' . $now . ', \'' . $db->escape($username) . '\', ' . $fid . ', \'' . $db->escape($question) . '\')') or error('Unable to create topic', __FILE__, __LINE__, $db->error());
+            } 
+            $new_tid = $db->insert_id();
+            $db->query('INSERT INTO ' . $db->prefix . 'polls (pollid, options, ptype) VALUES(' . $new_tid . ', \'' . $db->escape(serialize($option)) . '\', ' . $ptype . ')') or error('Unable to create poll', __FILE__, __LINE__, $db->error());
+
+	    if (!$pun_user['is_guest']) {
+				// Create the post ("topic post")
+				$db->query('INSERT INTO ' . $db->prefix . 'posts (poster, poster_id, poster_ip, message, hide_smilies, posted, topic_id) VALUES(\'' . $db->escape($username) . '\', ' . $pun_user['id'] . ', \'' . get_remote_address() . '\', \'' . $db->escape($message) . '\', \'' . $hide_smilies . '\', ' . $now . ', ' . $new_tid . ')') or error('Unable to create post', __FILE__, __LINE__, $db->error());
+			} else {
+				// Create the post ("topic post")
+				$email_sql = ($pun_config['p_force_guest_email'] == '1' || $email != '') ? '\'' . $email . '\'' : 'NULL';
+				$db->query('INSERT INTO ' . $db->prefix . 'posts (poster, poster_ip, poster_email, message, hide_smilies, posted, topic_id) VALUES(\'' . $db->escape($username) . '\', \'' . get_remote_address() . '\', ' . $email_sql . ', \'' . $db->escape($message) . '\', \'' . $hide_smilies . '\', ' . $now . ', ' . $new_tid . ')') or error('Unable to create post', __FILE__, __LINE__, $db->error());
+			} 
+
+			$new_pid = $db->insert_id(); 
+			// Update the topic with last_post_id
+			$db->query('UPDATE ' . $db->prefix . 'topics SET last_post_id=' . $new_pid . ' WHERE id=' . $new_tid) or error('Unable to update topic', __FILE__, __LINE__, $db->error());
+
+			update_search_index('post', $new_pid, $message, $subject);
+
+			update_forum($fid); 
+			// If the posting user is logged in, increment his/her post count
+		} 
+		if (!$pun_user['is_guest']) {
+			$low_prio = ($db_type == 'mysql') ? 'LOW_PRIORITY ' : '';
+			$db->query('UPDATE ' . $low_prio . $db->prefix . 'users SET num_posts=num_posts+1, last_post=' . $now . ' WHERE id=' . $pun_user['id']) or error('Unable to update user', __FILE__, __LINE__, $db->error());
+		} 
+		redirect('viewpoll.php?pid=' . $new_pid . '#p' . $new_pid, $lang_post['Post redirect']);
+	} 
+} 
+// If a topic id was specified in the url (it's a reply).
+if ($tid)
+{
+	$action = $lang_post['Post a reply'];
+	$form = '<form id="post" method="post" action="poll.php?action=post&amp;tid='.$tid.'" onsubmit="this.submit.disabled=true;if(process_form(this)){return true;}else{this.submit.disabled=false;return false;}">';
+
+	// If a quote-id was specified in the url.
+	if (isset($_GET['qid']))
+	{
+		$qid = intval($_GET['qid']);
+		if ($qid < 1)
+			message($lang_common['Bad request']);
+
+		$result = $db->query('SELECT poster, message FROM '.$db->prefix.'posts WHERE id='.$qid) or error('Unable to fetch quote info', __FILE__, __LINE__, $db->error());
+		if (!$db->num_rows($result))
+			message($lang_common['Bad request']);
+
+		list($q_poster, $q_message) = $db->fetch_row($result);
+
+		$q_message = str_replace('[img]', '[url]', $q_message);
+		$q_message = str_replace('[/img]', '[/url]', $q_message);
+		$q_message = pun_htmlspecialchars($q_message);
+
+		if ($pun_config['p_message_bbcode'] == '1')
+		{
+			// If username contains a square bracket, we add "" or '' around it (so we know when it starts and ends)
+			if (strpos($q_poster, '[') !== false || strpos($q_poster, ']') !== false)
+			{
+				if (strpos($q_poster, '\'') !== false)
+					$q_poster = '"'.$q_poster.'"';
+				else
+					$q_poster = '\''.$q_poster.'\'';
+			}
+			else
+			{
+				// Get the characters at the start and end of $q_poster
+				$ends = substr($q_poster, 0, 1).substr($q_poster, -1, 1);
+
+				// Deal with quoting "Username" or 'Username' (becomes '"Username"' or "'Username'")
+				if ($ends == '\'\'')
+					$q_poster = '"'.$q_poster.'"';
+				else if ($ends == '""')
+					$q_poster = '\''.$q_poster.'\'';
+			}
+
+			$quote = '[quote='.$q_poster.']'.$q_message.'[/quote]'."\n";
+		}
+		else
+			$quote = '> '.$q_poster.' '.$lang_common['wrote'].':'."\n\n".'> '.$q_message."\n";
+	}
+
+	$forum_name = '<a href="viewforum.php?id='.$cur_posting['id'].'">'.pun_htmlspecialchars($cur_posting['forum_name']).'</a>';
+}
+// If a forum_id was specified in the url (new topic).
+else if ($fid)
+{
+    $form = '<form id="post" method="post" action="poll.php?action=post&amp;fid=' . $fid . '" onsubmit="return process_form(this)">';
+    $action = $lang_polls['Create new poll'];
+    $forum_name = pun_htmlspecialchars($cur_posting['forum_name']);
+} else
+    message($lang_common['Bad request']);
+
+$page_title = pun_htmlspecialchars($pun_config['o_board_title']) . ' / ' . $action;
+$cur_index = 1; 
+if ($fid)
+{
+if ($ptype == 0) {
+    $form = '<form id="post" method="post" action="poll.php?&amp;fid=' . $fid . '">';
+
+    require PUN_ROOT . 'header.php';
+
+    ?>
+<div class="blockform">
+	<h2><span><?php echo $action ?></span></h2>
+	<div class="box">
+		<?php echo $form . "\n" ?>
+		<div class="inform">
+				<fieldset>
+					<legend><?php echo $lang_polls['Poll select'] ?></legend>
+					<div class="infldset">
+					<center><select tabindex="<?php echo $cur_index++ ?>" name="ptype">
+					<option value="1"><?php echo $lang_polls['Regular'] ?>
+					<option value="2"><?php echo $lang_polls['Multiselect'] ?>
+					<option value="3"><?php echo $lang_polls['Yesno'] ?>
+					</select></center>
+					</div>
+				</fieldset>
+			</div>
+			<p><center><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" tabindex="<?php echo $cur_index++ ?>" accesskey="s" />&nbsp;<a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></center></p>
+		</form>
+	</div>
+</div>
+
+<?php
+} elseif ($ptype == 1 || $ptype == 2 || $ptype == 3) {
+    
+    $required_fields = array('req_email' => $lang_common['E-mail'], 'req_question' => $lang_polls['Question'], 'req_subject' => $lang_common['Subject'], 'req_message' => $lang_common['Message']);
+    $focus_element = array('post');
+
+    if (!$pun_user['is_guest'])
+        $focus_element[] = 'req_question';
+    else {
+        $required_fields['req_username'] = $lang_post['Guest name'];
+        $focus_element[] = 'req_question';
+    } 
+
+    require PUN_ROOT . 'header.php';
+
+    ?>
+<div class="linkst">
+	<div class="inbox">
+		<ul><li><a href="index.php">
+		<?php echo $lang_common['Index'] ?>
+		</a></li><li>&nbsp;&raquo;&nbsp;
+		<?php echo $forum_name ?>
+		</li></ul>
+	</div>
+</div>
+
+<?php 
+    // If there are errors, we display them
+    if (!empty($errors)) {
+
+        ?>
+<div id="posterror" class="block">
+	<h2><span><?php echo $lang_post['Post errors'] ?></span></h2>
+	<div class="box">
+		<div class="inbox">
+			<p><?php echo $lang_post['Post errors info'] ?></p>
+			<ul>
+<?php
+
+        while (list(, $cur_error) = each($errors))
+        echo "\t\t\t\t" . '<li><strong>' . $cur_error . '</strong></li>' . "\n";
+
+        ?>
+			</ul>
+		</div>
+	</div>
+</div>
+
+<?php
+
+    } else if (isset($_POST['preview'])) {
+        require_once PUN_ROOT . 'include/parser.php';
+        $message = parse_message(trim($_POST['req_message']), $hide_smilies);
+
+        ?>
+		<div id="postpreview" class="blockpost">
+	<h2><span><?php echo $lang_polls['Poll preview'] ?></span></h2>
+	<div class="box">
+		<div class="inbox">
+			<div class="postright">
+				<div class="postmsg">
+				<?php
+        if ($ptype == 1) {
+
+            ?><strong>
+					<?php echo pun_htmlspecialchars($question);
+
+            ?>
+				</strong>	<br /><br />
+					<form action="" method="POST">
+					<?php
+            while (list($key, $value) = each($option)) {
+                if (!empty($value)) {
+
+                    ?>
+					<input type="radio"> <?php echo pun_htmlspecialchars($value);
+
+                    ?> <br />
+					<?php
+                } 
+            } 
+
+            ?>
+			</form>
+			<?php
+        } elseif ($ptype == 2) {
+
+            ?><strong>
+					<?php echo pun_htmlspecialchars($question);
+
+            ?>
+					</strong><br /><br />
+					<form action="" method="POST">
+					<?php
+            while (list($key, $value) = each($option)) {
+                if (!empty($value)) {
+
+                    ?>
+					<input type="checkbox"> <?php echo pun_htmlspecialchars($value);
+
+                    ?> <br />
+					<?php
+                } 
+            } 
+
+            ?>
+			</form>
+			<?php
+        } elseif ($ptype == 3) {
+
+            ?><strong>
+					<?php echo pun_htmlspecialchars($question);
+
+            ?></strong>
+					<br /><br />
+					<form action="" method="POST">
+					<?php
+            while (list($key, $value) = each($option)) {
+                if (!empty($value)) {
+
+                    ?>
+<strong>
+					<?php echo pun_htmlspecialchars($value);
+
+                    ?></strong><br /><input type="radio"> <?php echo pun_htmlspecialchars($yesval);
+
+                    ?><input type="radio"> <?php echo pun_htmlspecialchars($noval);
+
+                    ?><br />
+					<?php
+                } 
+            } 
+
+            ?>
+			</form>
+			<?php
+        } 
+
+        ?>
+				</div>
+			</div>
+		</div>
+	</div>
+</div>
+<div id="postpreview" class="blockpost">
+	<h2><span><?php echo $lang_post['Post preview'] ?></span></h2>
+	<div class="box">
+		<div class="inbox">
+			<div class="postright">
+				<div class="postmsg">
+					<?php echo $message . "\n" ?>
+				</div>
+			</div>
+		</div>
+	</div>
+</div>
+
+<?php
+
+    } 
+
+    // Regular Poll Type
+    if ($ptype == 1) {
+
+        ?>
+	<div class="blockform">
+	<h2><span><?php echo $action ?></span></h2>
+	<div class="box">
+		<?php echo $form . "\n" ?>
+			<div class="inform">
+				<fieldset>
+				<legend><?php echo $lang_polls['New poll legend'] ?></legend>
+				<div class="infldset">
+				<input type="hidden" name="ptype" value="1" />
+					<label><strong><?php echo $lang_polls['Question'] ?></strong><br /><input type="text" name="req_question" value="<?php if (isset($_POST['req_question'])) echo pun_htmlspecialchars($question);
+
+        ?>" size="80" maxlength="70" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<?php
+        for ($x = 1; $x <= $pun_config['poll_max_fields'] ;$x++) {
+
+            ?>
+						<label><strong><?php echo $lang_polls['Option'] ?></strong><br /> <input type="text" name="poll_option[<?php echo $x;
+
+            ?>]" value="<?php if (isset($_POST['poll_option'][$x])) echo pun_htmlspecialchars($option[$x]);
+
+            ?>" size="60" maxlength="55" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<?php
+        } 
+
+        ?> </div> </fieldset> </div> <?php 
+        // Multiselect poll type
+    } elseif ($ptype == 2) {
+
+        ?>
+	
+	
+		<div class="blockform">
+	<h2><span><?php echo $action ?></span></h2>
+	<div class="box">
+		<?php echo $form . "\n" ?>
+			<div class="inform">
+				<fieldset>
+				<legend><?php echo $lang_polls['New poll legend multiselect'] ?></legend>
+				<div class="infldset">
+				<input type="hidden" name="ptype" value="2" />
+					<label><strong><?php echo $lang_polls['Question'] ?></strong><br /><input type="text" name="req_question" value="<?php if (isset($_POST['req_question'])) echo pun_htmlspecialchars($question);
+
+        ?>" size="80" maxlength="70" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<?php
+        for ($x = 1;
+            $x <= $pun_config['poll_max_fields']; $x++) {
+
+            ?>
+						<label><strong><?php echo $lang_polls['Option'] ?></strong><br /> <input type="text" name="poll_option[<?php echo $x;
+
+            ?>]" value="<?php if (isset($_POST['poll_option'][$x])) echo pun_htmlspecialchars($option[$x]);
+
+            ?>" size="60" maxlength="55" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<?php
+        } 
+
+        ?> </div> </fieldset> </div> <?php 
+        // Multiselect Yes/No poll type
+    } elseif ($ptype == 3) {
+
+        ?>
+		
+		
+		<div class="blockform">
+	<h2><span><?php echo $action ?></span></h2>
+	<div class="box">
+		<?php echo $form . "\n" ?>
+			<div class="inform">
+				<fieldset>
+				<legend><?php echo $lang_polls['New poll legend yesno'] ?></legend>
+				<div class="infldset">
+				<input type="hidden" name="ptype" value="3" />
+					<label><strong><?php echo $lang_polls['Question'] ?></strong><br /><input type="text" name="req_question" value="<?php if (isset($_POST['req_question'])) echo pun_htmlspecialchars($question);
+
+        ?>" size="80" maxlength="70" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<label><strong><?php echo $lang_polls['Yes'] ?></strong><br /> <input type="text" name="poll_yes" value="<?php if (isset($_POST['poll_yes'])) echo pun_htmlspecialchars($yesval);
+
+        ?>" size="40" maxlength="35" tabindex="<?php echo $cur_index++ ?>" /></label>
+						<label><strong><?php echo $lang_polls['No'] ?></strong><br /> <input type="text" name="poll_no" value="<?php if (isset($_POST['poll_no'])) echo pun_htmlspecialchars($noval);
+
+        ?>" size="40" maxlength="35" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<?php
+        for ($x = 1; $x <= $pun_config['poll_max_fields']; $x++) {
+
+            ?>
+						<label><strong><?php echo $lang_polls['Option'] ?></strong><br /> <input type="text" name="poll_option[<?php echo $x;
+
+            ?>]" value="<?php if (isset($_POST['poll_option'][$x])) echo pun_htmlspecialchars($option[$x]);
+
+            ?>" size="60" maxlength="55" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<?php
+        } 
+
+        ?> </div> </fieldset> </div> <?php
+    } else
+        message($lang_common['Bad request']);
+
+
+	} else
+    message($lang_common['Bad request']);
+} else {
+$page_title = pun_htmlspecialchars($pun_config['o_board_title']).' / '.$action;
+$required_fields = array('req_email' => $lang_common['E-mail'], 'req_question' => $lang_polls['Question'], 'req_subject' => $lang_common['Subject'], 'req_message' => $lang_common['Message']);
+$focus_element = array('post');
+
+if (!$pun_user['is_guest'])
+	$focus_element[] = ($fid) ? 'req_subject' : 'req_message';
+else
+{
+	$required_fields['req_username'] = $lang_post['Guest name'];
+	$focus_element[] = 'req_username';
+}
+
+require PUN_ROOT.'header.php';
+
+?>
+<div class="linkst">
+	<div class="inbox">
+		<ul><li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li><li>&nbsp;&raquo;&nbsp;<?php echo $forum_name ?><?php if (isset($cur_posting['subject'])) echo '</li><li>&nbsp;&raquo;&nbsp;'.pun_htmlspecialchars($cur_posting['subject']) ?></li></ul>
+	</div>
+</div>
+
+<?php
+
+// If there are errors, we display them
+if (!empty($errors))
+{
+
+?>
+<div id="posterror" class="block">
+	<h2><span><?php echo $lang_post['Post errors'] ?></span></h2>
+	<div class="box">
+		<div class="inbox">
+			<p><?php echo $lang_post['Post errors info'] ?></p>
+			<ul>
+<?php
+
+	while (list(, $cur_error) = each($errors))
+		echo "\t\t\t\t".'<li><strong>'.$cur_error.'</strong></li>'."\n";
+?>
+			</ul>
+		</div>
+	</div>
+</div>
+
+<?php
+
+}
+else if (isset($_POST['preview']))
+{
+	require_once PUN_ROOT.'include/parser.php';
+	$message = parse_message($message, $hide_smilies);
+
+?>
+<div id="postpreview" class="blockpost">
+	<h2><span><?php echo $lang_post['Post preview'] ?></span></h2>
+	<div class="box">
+		<div class="inbox">
+			<div class="postright">
+				<div class="postmsg">
+					<?php echo $message."\n" ?>
+				</div>
+			</div>
+		</div>
+	</div>
+</div>
+<?php } 
+
+
+}
+
+
+?>
+
+<?php
+
+
+if (($tid) || ($ptype != 0)) {
+
+
+
+
+    ?>
+<?php if ($tid): 
+$cur_index = 1; ?> <div class="blockform">
+	<h2><span><?php echo $action ?></span></h2>
+	<div class="box">
+		<?php echo $form . "\n" ?> <?php endif; ?>
+			<div class="inform">
+				<fieldset>
+					<legend><?php echo $lang_common['Write message legend'] ?></legend>
+					<div class="infldset txtarea">
+					<?php if ($fid): ?>	<input type="hidden" name="create_poll" value="1" /> <?php endif; ?>
+					<input type="hidden" name="form_sent" value="1" />
+						<input type="hidden" name="form_user" value="<?php echo (!$pun_user['is_guest']) ? pun_htmlspecialchars($pun_user['username']) : 'Guest';
+
+    ?>" />
+<?php
+
+    if ($pun_user['is_guest']) {
+        $email_label = ($pun_config['p_force_guest_email'] == '1') ? '<strong>' . $lang_common['E-mail'] . '</strong>' : $lang_common['E-mail'];
+        $email_form_name = ($pun_config['p_force_guest_email'] == '1') ? 'req_email' : 'email';
+
+        ?>						<label class="conl"><strong><?php echo $lang_post['Guest name'] ?></strong><br /><input type="text" name="req_username" value="<?php if (isset($_POST['req_username'])) echo pun_htmlspecialchars($username);
+
+        ?>" size="25" maxlength="25" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<label class="conl"><?php echo $email_label ?><br /><input type="text" name="<?php echo $email_form_name ?>" value="<?php if (isset($_POST[$email_form_name])) echo pun_htmlspecialchars($email);
+
+        ?>" size="50" maxlength="50" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+						<div class="clearer"></div>
+<?php
+
+    } 
+
+   if ($fid): ?>
+						<label><strong><?php echo $lang_common['Subject'] ?></strong><br /><input class="longinput" type="text" name="req_subject" value="<?php if (isset($_POST['req_subject'])) echo pun_htmlspecialchars($subject);
+
+    ?>" size="80" maxlength="70" tabindex="<?php echo $cur_index++ ?>" /><br /></label>
+<?php endif; ?>
+					  <label><strong><?php echo $lang_common['Message'] ?></strong><br />
+						<textarea name="req_message" rows="20" cols="95" tabindex="<?php echo $cur_index++ ?>"><?php echo isset($_POST['req_message']) ? pun_htmlspecialchars(trim($_POST['req_message'])) : (isset($quote) ? $quote : ''); ?></textarea><br /></label>
+						<ul class="bblinks">
+							<li><a href="help.php#bbcode" onclick="window.open(this.href); return false;"><?php echo $lang_common['BBCode'] ?></a>: <?php echo ($pun_config['p_message_bbcode'] == '1') ? $lang_common['on'] : $lang_common['off'];
+
+    ?></li>
+							<li><a href="help.php#img" onclick="window.open(this.href); return false;"><?php echo $lang_common['img tag'] ?></a>: <?php echo ($pun_config['p_message_img_tag'] == '1') ? $lang_common['on'] : $lang_common['off'];
+
+    ?></li>
+							<li><a href="help.php#smilies" onclick="window.open(this.href); return false;"><?php echo $lang_common['Smilies'] ?></a>: <?php echo ($pun_config['o_smilies'] == '1') ? $lang_common['on'] : $lang_common['off'];
+
+    ?></li>
+						</ul>
+					</div>
+				</fieldset>
+<?php
+
+    $checkboxes = array();
+    if (!$pun_user['is_guest']) {
+        if ($pun_config['o_smilies'] == '1')
+            $checkboxes[] = '<label><input type="checkbox" name="hide_smilies" value="1" tabindex="' . ($cur_index++) . '"' . (isset($_POST['hide_smilies']) ? ' checked="checked"' : '') . ' />' . $lang_post['Hide smilies'];
+        if ($pun_config['o_subscriptions'] == '1')
+            $checkboxes[] = '<label><input type="checkbox" name="subscribe" value="1" tabindex="' . ($cur_index++) . '"' . (isset($_POST['subscribe']) ? ' checked="checked"' : '') . ' />' . $lang_post['Subscribe'];
+    } else if ($pun_config['o_smilies'] == '1')
+        $checkboxes[] = '<label><input type="checkbox" name="hide_smilies" value="1" tabindex="' . ($cur_index++) . '"' . (isset($_POST['hide_smilies']) ? ' checked="checked"' : '') . ' />' . $lang_post['Hide smilies'];
+    if (!empty($checkboxes)) {
+
+        ?>
+			</div>
+			<div class="inform">
+				<fieldset>
+					<legend><?php echo $lang_common['Options'] ?></legend>
+					<div class="infldset">
+						<div class="rbox">
+							<?php echo implode('<br /></label>' . "\n\t\t\t\t", $checkboxes) . '<br /></label>' . "\n" ?>
+						</div>
+					</div>
+				</fieldset>
+<?php
+
+    } 
+
+    ?>
+			</div>
+			<p><input type="submit" name="submit" value="<?php echo $lang_common['Submit'] ?>" tabindex="<?php echo $cur_index++ ?>" accesskey="s" /><input type="submit" name="preview" value="<?php echo $lang_post['Preview'] ?>" tabindex="<?php echo $cur_index++ ?>" accesskey="p" /><a href="javascript:history.go(-1)"><?php echo $lang_common['Go back'] ?></a></p>
+		</form>
+	</div>
+</div>
+
+<?php
+}
+require PUN_ROOT . 'footer.php';
diff -wbBurN upload/search.php upload.my/search.php
--- upload/search.php	2006-10-15 22:36:14 +0400
+++ upload.my/search.php	2006-12-06 14:02:21 +0300
@@ -463,11 +463,10 @@
 		if ($show_as == 'posts')
 		{
 			$substr_sql = ($db_type != 'sqlite') ? 'SUBSTRING' : 'SUBSTR';
-			$sql = 'SELECT p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, '.$substr_sql.'(p.message, 1, 1000) AS message, t.id AS tid, t.poster, t.subject, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id WHERE p.id IN('.$search_results.') ORDER BY '.$sort_by_sql;
+			$sql = 'SELECT p.id AS pid, p.poster AS pposter, p.posted AS pposted, p.poster_id, '.$substr_sql.'(p.message, 1, 1000) AS message, t.id AS tid, t.poster, t.subject, t.question t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.forum_id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id WHERE p.id IN('.$search_results.') ORDER BY '.$sort_by_sql;
 		}
 		else
-			$sql = 'SELECT t.id AS tid, t.poster, t.subject, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.forum_id FROM '.$db->prefix.'topics AS t WHERE t.id IN('.$search_results.') GROUP BY t.id, t.poster, t.subject, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.forum_id'.$group_by_sql.' ORDER BY '.$sort_by_sql;
-
+			$sql = 'SELECT t.id AS tid, t.poster, t.subject, t.question, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.forum_id FROM '.$db->prefix.'posts AS p INNER JOIN '.$db->prefix.'topics AS t ON t.id=p.topic_id WHERE t.id IN('.$search_results.') GROUP BY t.id, t.poster, t.subject, t.last_post, t.last_post_id, t.last_poster, t.num_replies, t.closed, t.forum_id'.$group_by_sql.' ORDER BY '.$sort_by_sql;
 
 		// Determine the topic or post offset (based on $_GET['p'])
 		$per_page = ($show_as == 'posts') ? $pun_user['disp_posts'] : $pun_user['disp_topics'];
@@ -552,7 +551,10 @@
 			if ($show_as == 'posts')
 			{
 				$icon = '<div class="icon"><div class="nosize">'.$lang_common['Normal icon'].'</div></div>'."\n";
+				if ($search_set[$i]['question'] == "")
 				$subject = '<a href="viewtopic.php?id='.$search_set[$i]['tid'].'">'.pun_htmlspecialchars($search_set[$i]['subject']).'</a>';
+				else
+					$subject = '<a href="viewpoll.php?id='.$search_set[$i]['tid'].'"><b>'.pun_htmlspecialchars($search_set[$i]['question']).'</b><BR>'.pun_htmlspecialchars($search_set[$i]['subject']).'</a>';
 
 				if (!$pun_user['is_guest'] && $search_set[$i]['last_post'] > $pun_user['last_visit'])
 					$icon = '<div class="icon inew"><div class="nosize">'.$lang_common['New icon'].'</div></div>'."\n";
@@ -610,9 +612,10 @@
 				$item_status = '';
 				$icon_type = 'icon';
 
-
+				if ($search_set[$i]['question'] == "")
 				$subject = '<a href="viewtopic.php?id='.$search_set[$i]['tid'].'">'.pun_htmlspecialchars($search_set[$i]['subject']).'</a> <span class="byuser">'.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($search_set[$i]['poster']).'</span>';
-
+				else
+					$subject = '<a href="viewpoll.php?id='.$search_set[$i]['tid'].'"><b>'.pun_htmlspecialchars($search_set[$i]['question']).'</b><BR>'.pun_htmlspecialchars($search_set[$i]['subject']).'</a> <span class="byuser">'.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($search_set[$i]['poster']).'</span>';
 				if ($search_set[$i]['closed'] != '0')
 				{
 					$icon_text = $lang_common['Closed icon'];
@@ -625,7 +628,10 @@
 					$item_status .= ' inew';
 					$icon_type = 'icon inew';
 					$subject = '<strong>'.$subject.'</strong>';
+					if ($search_set[$i]['question'] == "")
 					$subject_new_posts = '<span class="newtext">[&nbsp;<a href="viewtopic.php?id='.$search_set[$i]['tid'].'&amp;action=new" title="'.$lang_common['New posts info'].'">'.$lang_common['New posts'].'</a>&nbsp;]</span>';
+					else
+						$subject_new_posts = '<span class="newtext">[&nbsp;<a href="viewpoll.php?id='.$search_set[$i]['tid'].'&amp;action=new" title="'.$lang_common['New posts info'].'">'.$lang_common['New posts'].'</a>&nbsp;]</span>';
 				}
 				else
 					$subject_new_posts = null;
@@ -633,8 +639,13 @@
 				$num_pages_topic = ceil(($search_set[$i]['num_replies'] + 1) / $pun_user['disp_posts']);
 
 				if ($num_pages_topic > 1)
+				{
+					if ($search_set[$i]['question'] == "")
 					$subject_multipage = '[ '.paginate($num_pages_topic, -1, 'viewtopic.php?id='.$search_set[$i]['tid']).' ]';
 				else
+						$subject_multipage = '[ '.paginate($num_pages_topic, -1, 'viewpoll.php?id='.$search_set[$i]['tid']).' ]';
+				}
+				else
 					$subject_multipage = null;
 
 				// Should we show the "New posts" and/or the multipage links?
@@ -656,7 +667,15 @@
 					</td>
 					<td class="tc2"><?php echo $forum ?></td>
 					<td class="tc3"><?php echo $search_set[$i]['num_replies'] ?></td>
-					<td class="tcr"><?php echo '<a href="viewtopic.php?pid='.$search_set[$i]['last_post_id'].'#p'.$search_set[$i]['last_post_id'].'">'.format_time($search_set[$i]['last_post']).'</a> '.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($search_set[$i]['last_poster']) ?></td>
+					<?php
+					if ($search_set[$i]['question'] == "")
+					{
+						?><td class="tcr"><?php echo '<a href="viewtopic.php?pid='.$search_set[$i]['last_post_id'].'#p'.$search_set[$i]['last_post_id'].'">'.format_time($search_set[$i]['last_post']).'</a> '.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($search_set[$i]['last_poster']) ?></td><?php
+					}
+					else
+					{
+						?><td class="tcr"><?php echo '<a href="viewpoll.php?pid='.$search_set[$i]['last_post_id'].'#p'.$search_set[$i]['last_post_id'].'">'.format_time($search_set[$i]['last_post']).'</a> '.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($search_set[$i]['last_poster']) ?></td><?php
+					} ?>
 				</tr>
 <?php
 
diff -wbBurN upload/viewforum.php upload.my/viewforum.php
--- upload/viewforum.php	2005-09-22 04:39:32 +0400
+++ upload.my/viewforum.php	2006-12-06 13:58:03 +0300
@@ -37,6 +37,7 @@
 
 // Load the viewforum.php language file
 require PUN_ROOT.'lang/'.$pun_user['language'].'/forum.php';
+require PUN_ROOT.'lang/'.$pun_user['language'].'/polls.php';
 
 // Fetch some info about the forum
 $result = $db->query('SELECT f.forum_name, f.redirect_url, f.moderators, f.num_topics, f.sort_by, fp.post_topics FROM '.$db->prefix.'forums AS f LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND f.id='.$id) or error('Unable to fetch forum info', __FILE__, __LINE__, $db->error());
@@ -61,7 +62,7 @@
 
 // Can we or can we not post new topics?
 if (($cur_forum['post_topics'] == '' && $pun_user['g_post_topics'] == '1') || $cur_forum['post_topics'] == '1' || $is_admmod)
-	$post_link = "\t\t".'<p class="postlink conr"><a href="post.php?fid='.$id.'">'.$lang_forum['Post topic'].'</a></p>'."\n";
+	$post_link = "\t\t".'<p class="postlink conr"><a href="post.php?fid='.$id.'">'.$lang_forum['Post topic'].'</a> <BR /> <a href="poll.php?fid='.$id.'">'.$lang_polls['New poll'].'</a></p>'."\n";
 else
 	$post_link = '';
 
@@ -110,7 +111,7 @@
 if ($pun_user['is_guest'] || $pun_config['o_show_dot'] == '0')
 {
 	// Without "the dot"
-	$sql = 'SELECT id, poster, subject, posted, last_post, last_post_id, last_poster, num_views, num_replies, closed, sticky, moved_to FROM '.$db->prefix.'topics WHERE forum_id='.$id.' ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'];
+	$sql = 'SELECT id, poster, subject, posted, last_post, last_post_id, last_poster, num_views, num_replies, closed, sticky, moved_to, question FROM '.$db->prefix.'topics WHERE forum_id='.$id.' ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'];
 }
 else
 {
@@ -119,15 +120,15 @@
 	{
 		case 'mysql':
 		case 'mysqli':
-			$sql = 'SELECT p.poster_id AS has_posted, t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id AND p.poster_id='.$pun_user['id'].' WHERE t.forum_id='.$id.' GROUP BY t.id ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'];
+			$sql = 'SELECT p.poster_id AS has_posted, t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to, t.question FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id AND p.poster_id='.$pun_user['id'].' WHERE t.forum_id='.$id.' GROUP BY t.id ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'];
 			break;
 
 		case 'sqlite':
-			$sql = 'SELECT p.poster_id AS has_posted, t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id AND p.poster_id='.$pun_user['id'].' WHERE t.id IN(SELECT id FROM '.$db->prefix.'topics WHERE forum_id='.$id.' ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'].') GROUP BY t.id ORDER BY t.sticky DESC, t.last_post DESC';
+			$sql = 'SELECT p.poster_id AS has_posted, t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to, t.question FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id AND p.poster_id='.$pun_user['id'].' WHERE t.id IN(SELECT id FROM '.$db->prefix.'topics WHERE forum_id='.$id.' ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'].') GROUP BY t.id ORDER BY t.sticky DESC, t.last_post DESC';
 			break;
 
 		default:
-			$sql = 'SELECT p.poster_id AS has_posted, t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id AND p.poster_id='.$pun_user['id'].' WHERE t.forum_id='.$id.' GROUP BY t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to, p.poster_id ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'];
+			$sql = 'SELECT p.poster_id AS has_posted, t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to, t.question FROM '.$db->prefix.'topics AS t LEFT JOIN '.$db->prefix.'posts AS p ON t.id=p.topic_id AND p.poster_id='.$pun_user['id'].' WHERE t.forum_id='.$id.' GROUP BY t.id, t.subject, t.poster, t.posted, t.last_post, t.last_post_id, t.last_poster, t.num_views, t.num_replies, t.closed, t.sticky, t.moved_to, t.question, p.poster_id ORDER BY sticky DESC, '.(($cur_forum['sort_by'] == '1') ? 'posted' : 'last_post').' DESC LIMIT '.$start_from.', '.$pun_user['disp_topics'];
 			break;
 
 	}
@@ -152,6 +153,43 @@
 		if ($pun_config['o_censoring'] == '1')
 			$cur_topic['subject'] = censor_words($cur_topic['subject']);
 
+		if ($cur_topic['question'] != '') {
+			if ($pun_config['o_censoring'] == '1')
+				$cur_topic['question'] = censor_words($cur_topic['question']);
+
+			if ($cur_topic['moved_to'] != 0)
+				$subject = $lang_forum['Moved'].': '.$lang_polls['Poll'].': <a href="viewpoll.php?id='.$cur_topic['moved_to'].'">'.pun_htmlspecialchars($cur_topic['question']).'</a><br /> <span class="byuser"><b>'.pun_htmlspecialchars($cur_topic['subject']).'</b> '.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($cur_topic['poster']).'</span>';
+			else if ($cur_topic['closed'] == '0')
+				$subject = $lang_polls['Poll'].': <a href="viewpoll.php?id='.$cur_topic['id'].'">'.pun_htmlspecialchars($cur_topic['question']).'</a><br \> <span class="byuser"><b>'.pun_htmlspecialchars($cur_topic['subject']).'</b> '.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($cur_topic['poster']).'</span>';
+			else
+			{
+				$subject = $lang_polls['Poll'].': <a href="viewpoll.php?id='.$cur_topic['id'].'">'.pun_htmlspecialchars($cur_topic['question']).'</a><br /> <span class="byuser"><b>'.pun_htmlspecialchars($cur_topic['subject']).'</b> '.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($cur_topic['poster']).'</span>';
+				$icon_text = $lang_common['Closed icon'];
+				$item_status = 'iclosed';
+			}
+	
+			if (!$pun_user['is_guest'] && $cur_topic['last_post'] > $pun_user['last_visit'] && $cur_topic['moved_to'] == null)
+			{
+				$icon_text .= ' '.$lang_common['New icon'];
+				$item_status .= ' inew';
+				$icon_type = 'icon inew';
+
+	
+				$subject = '<strong>'.$subject.'</strong>';
+				$subject_new_posts = '<span class="newtext">[&nbsp;<a href="viewpoll.php?id='.$cur_topic['id'].'&amp;action=new" title="'.$lang_common['New posts info'].'">'.$lang_common['New posts'].'</a>&nbsp;]</span>';
+			}
+			else
+				$subject_new_posts = null;
+	
+			// Should we display the dot or not? :)
+			if (!$pun_user['is_guest'] && $pun_config['o_show_dot'] == '1')
+			{
+				if ($cur_topic['has_posted'] == $pun_user['id'])
+					$subject = '<strong>&middot;</strong>&nbsp;'.$subject;
+				else
+					$subject = '&nbsp;&nbsp;'.$subject;
+			}
+		} else {
 		if ($cur_topic['moved_to'] != 0)
 			$subject = $lang_forum['Moved'].': <a href="viewtopic.php?id='.$cur_topic['moved_to'].'">'.pun_htmlspecialchars($cur_topic['subject']).'</a> <span class="byuser">'.$lang_common['by'].'&nbsp;'.pun_htmlspecialchars($cur_topic['poster']).'</span>';
 		else if ($cur_topic['closed'] == '0')
@@ -168,6 +207,8 @@
 			$icon_text .= ' '.$lang_common['New icon'];
 			$item_status .= ' inew';
 			$icon_type = 'icon inew';
+
+	
 			$subject = '<strong>'.$subject.'</strong>';
 			$subject_new_posts = '<span class="newtext">[&nbsp;<a href="viewtopic.php?id='.$cur_topic['id'].'&amp;action=new" title="'.$lang_common['New posts info'].'">'.$lang_common['New posts'].'</a>&nbsp;]</span>';
 		}
@@ -182,6 +223,7 @@
 			else
 				$subject = '&nbsp;&nbsp;'.$subject;
 		}
+		}
 
 		if ($cur_topic['sticky'] == '1')
 		{
@@ -193,7 +235,12 @@
 		$num_pages_topic = ceil(($cur_topic['num_replies'] + 1) / $pun_user['disp_posts']);
 
 		if ($num_pages_topic > 1)
+		{
+			if ($cur_topic['question'] != '') 
+				$subject_multipage = '[ '.paginate($num_pages_topic, -1, 'viewpoll.php?id='.$cur_topic['id']).' ]';
+			else
 			$subject_multipage = '[ '.paginate($num_pages_topic, -1, 'viewtopic.php?id='.$cur_topic['id']).' ]';
+		}
 		else
 			$subject_multipage = null;
 
diff -wbBurN upload/viewpoll.php upload.my/viewpoll.php
--- upload/viewpoll.php	1970-01-01 03:00:00 +0300
+++ upload.my/viewpoll.php	2007-01-20 14:28:30 +0300
@@ -0,0 +1,547 @@
+<?php
+/***********************************************************************
+
+  Caleb Champlin (med_mediator@hotmail.com)
+
+  This file is is a modification of a file from of PunBB.
+
+************************************************************************/
+
+/***********************************************************************
+
+  Copyright (C) 2002-2005  Rickard Andersson (rickard@punbb.org)
+
+  This file is part of PunBB.
+
+  PunBB is free software; you can redistribute it and/or modify it
+  under the terms of the GNU General Public License as published
+  by the Free Software Foundation; either version 2 of the License,
+  or (at your option) any later version.
+
+  PunBB is distributed in the hope that it will be useful, but
+  WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+  MA  02111-1307  USA
+
+************************************************************************/
+
+
+define('PUN_ROOT', './');
+require PUN_ROOT . 'include/common.php';
+
+if ($pun_user['g_read_board'] == '0')
+    message($lang_common['No view']);
+
+$action = isset($_GET['action']) ? $_GET['action'] : null;
+$id = isset($_GET['id']) ? intval($_GET['id']) : 0;
+$pid = isset($_GET['pid']) ? intval($_GET['pid']) : 0;
+if ($id < 1 && $pid < 1)
+    message($lang_common['Bad request']);
+// Load the viewtopic.php language file
+require PUN_ROOT . 'lang/' . $pun_user['language'] . '/topic.php';
+// If a post ID is specified we determine topic ID and page number so we can redirect to the correct message
+if ($pid) 
+{
+    $result = $db->query('SELECT topic_id FROM ' . $db->prefix . 'posts WHERE id=' . $pid) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());
+    if (!$db->num_rows($result))
+        message($lang_common['Bad request']);
+
+    $id = $db->result($result); 
+    // Determine on what page the post is located (depending on $pun_user['disp_posts'])
+    $result = $db->query('SELECT id FROM ' . $db->prefix . 'posts WHERE topic_id=' . $id . ' ORDER BY posted') or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());
+    $num_posts = $db->num_rows($result);
+
+    for ($i = 0; $i < $num_posts; ++$i) 
+	{
+        $cur_id = $db->result($result, $i);
+        if ($cur_id == $pid)
+            break;
+    } 
+    ++$i; // we started at 0
+    $_GET['p'] = ceil($i / $pun_user['disp_posts']);
+} 
+// If action=new, we redirect to the first new post (if any)
+else if ($action == 'new' && !$pun_user['is_guest']) 
+{
+    $result = $db->query('SELECT MIN(id) FROM ' . $db->prefix . 'posts WHERE topic_id=' . $id . ' AND posted>' . $pun_user['last_visit']) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());
+    $first_new_post_id = $db->result($result);
+
+    if ($first_new_post_id)
+        header('Location: viewpoll.php?pid=' . $first_new_post_id . '#p' . $first_new_post_id);
+    else // If there is no new post, we go to the last post
+        header('Location: viewpoll.php?id=' . $id . '&action=last');
+
+    exit;
+} 
+// If action=last, we redirect to the last post
+else if ($action == 'last') 
+{
+    $result = $db->query('SELECT MAX(id) FROM ' . $db->prefix . 'posts WHERE topic_id=' . $id) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());
+    $last_post_id = $db->result($result);
+
+    if ($last_post_id) 
+{
+        header('Location: viewpoll.php?pid=' . $last_post_id . '#p' . $last_post_id);
+        exit;
+    } 
+} 
+// Fetch some info about the topic
+if (!$pun_user['is_guest'])
+    $result = $db->query('SELECT t.subject, t.closed, t.num_replies, t.sticky, t.question, t.yes, t.no, f.id AS forum_id, f.forum_name, f.moderators, fp.post_replies, s.user_id AS is_subscribed FROM ' . $db->prefix . 'topics AS t INNER JOIN ' . $db->prefix . 'forums AS f ON f.id=t.forum_id LEFT JOIN ' . $db->prefix . 'subscriptions AS s ON (t.id=s.topic_id AND s.user_id=' . $pun_user['id'] . ') LEFT JOIN ' . $db->prefix . 'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id=' . $pun_user['g_id'] . ') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.id=' . $id . ' AND t.question!=\'\' AND t.moved_to IS NULL') or error('Unable to fetch topic info', __FILE__, __LINE__, $db->error());
+else
+    $result = $db->query('SELECT t.subject, t.closed, t.num_replies, t.sticky, t.question, t.yes, t.no, f.id AS forum_id, f.forum_name, f.moderators, fp.post_replies FROM ' . $db->prefix . 'topics AS t INNER JOIN ' . $db->prefix . 'forums AS f ON f.id=t.forum_id LEFT JOIN ' . $db->prefix . 'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id=' . $pun_user['g_id'] . ') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.id=' . $id . ' AND t.question!=\'\' AND t.moved_to IS NULL') or error('Unable to fetch topic info', __FILE__, __LINE__, $db->error());
+
+if (!$db->num_rows($result))
+    message($lang_common['Bad request']);
+
+$cur_topic = $db->fetch_assoc($result);
+// Sort out who the moderators are and if we are currently a moderator (or an admin)
+$mods_array = ($cur_topic['moderators'] != '') ? unserialize($cur_topic['moderators']) : array();
+$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_id'] == PUN_MOD && array_key_exists($pun_user['username'], $mods_array))) ? true : false;
+// Can we or can we not post replies?
+if ($cur_topic['closed'] == '0') {
+    if (($cur_topic['post_replies'] == '' && $pun_user['g_post_replies'] == '1') || $cur_topic['post_replies'] == '1' || $is_admmod)
+        $post_link = '<a href="poll.php?tid=' . $id . '">' . $lang_topic['Post reply'] . '</a>';
+    else
+        $post_link = '&nbsp;';
+} 
+else 
+{
+    $post_link = $lang_topic['Topic closed'];
+
+    if ($is_admmod)
+        $post_link .= ' / <a href="poll.php?tid=' . $id . '">' . $lang_topic['Post reply'] . '</a>';
+} 
+// Determine the post offset (based on $_GET['p'])
+$num_pages = ceil(($cur_topic['num_replies'] + 1) / $pun_user['disp_posts']);
+
+$p = (!isset($_GET['p']) || $_GET['p'] <= 1 || $_GET['p'] > $num_pages) ? 1 : $_GET['p'];
+$start_from = $pun_user['disp_posts'] * ($p - 1);
+// Generate paging links
+$paging_links = $lang_common['Pages'] . ': ' . paginate($num_pages, $p, 'viewpoll.php?id=' . $id);
+
+if ($pun_config['o_censoring'] == '1')
+    $cur_topic['subject'] = censor_words($cur_topic['subject']);
+
+$quickpost = false;
+if ($pun_config['o_quickpost'] == '1' &&
+	!$pun_user['is_guest'] &&
+	($cur_topic['post_replies'] == '1' || ($cur_topic['post_replies'] == '' && $pun_user['g_post_replies'] == '1')) &&
+	($cur_topic['closed'] == '0' || $is_admmod))
+{
+    $required_fields = array('req_message' => $lang_common['Message']);
+    $quickpost = true;
+} 
+
+if (!$pun_user['is_guest'] && $pun_config['o_subscriptions'] == '1')
+{
+	if ($cur_topic['is_subscribed'])
+		// I apologize for the variable naming here. It's a mix of subscription and action I guess :-)
+		$subscraction = '<p class="subscribelink clearb">'.$lang_topic['Is subscribed'].' - <a href="misc.php?unsubscribe='.$id.'">'.$lang_topic['Unsubscribe'].'</a></p>'."\n";
+	else
+		$subscraction = '<p class="subscribelink clearb"><a href="misc.php?subscribe='.$id.'">'.$lang_topic['Subscribe'].'</a></p>'."\n";
+}
+else
+	$subscraction = '<div class="clearer"></div>'."\n";
+
+
+if ($cur_topic['question'])
+$page_title = pun_htmlspecialchars($pun_config['o_board_title'] . ' / ' . $cur_topic['question'] . ' - ' . $cur_topic['subject']);
+
+define('PUN_ALLOW_INDEX', 1);
+require PUN_ROOT . 'header.php';
+
+?>
+<div class="linkst">
+	<div class="inbox">
+		<p class="pagelink conl"><?php echo $paging_links ?></p>
+		<p class="postlink conr"><?php echo $post_link ?></p>
+		<ul><li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li><li>&nbsp;&raquo;&nbsp;<a href="viewforum.php?id=<?php echo $cur_topic['forum_id'] ?>"><?php echo pun_htmlspecialchars($cur_topic['forum_name']) ?></a></li><li>&nbsp;&raquo;&nbsp;<?php echo pun_htmlspecialchars($cur_topic['subject']) ?></li></ul>
+		<div class="clearer"></div>
+	</div>
+</div>
+
+<?php
+
+require PUN_ROOT . 'include/parser.php';
+$bg_switch = true; // Used for switching background color in posts
+$post_count = 0; // Keep track of post numbers
+
+// MOD
+   require PUN_ROOT . 'lang/' . $pun_user['language'] . '/polls.php'; 
+    // get the poll data
+    $result = $db->query('SELECT ptype,options,voters,votes FROM ' . $db->prefix . 'polls WHERE pollid=' . $id . '') or error('Unable to fetch poll info', __FILE__, __LINE__, $db->error());
+
+    if (!$db->num_rows($result))
+        message($lang_common['Bad request']);
+
+    $cur_poll = $db->fetch_assoc($result);
+
+    $options = unserialize($cur_poll['options']);
+    if (!empty($cur_poll['voters']))
+        $voters = unserialize($cur_poll['voters']);
+    else
+        $voters = array();
+
+    $ptype = $cur_poll['ptype']; 
+    // yay memory!
+    // $cur_poll = null;
+    $firstcheck = false;
+    ?>
+<div class="blockform">
+	<h2><span><?php echo $lang_polls['Poll'] ?></span></h2>
+	<div class="box">
+
+    	<?php
+    if ((!$pun_user['is_guest']) && (!in_array($pun_user['id'], $voters)) && ($cur_topic['closed'] == '0')) {
+		$showsubmit = true;
+		?>
+		<form id="post" method="post" action="vote.php">
+			<div class="inform">
+				<div class="rbox" align="center">
+						<input type="hidden" name="poll_id" value="<?php echo $id; ?>" />
+						<input type="hidden" name="form_sent" value="1" />
+						<input type="hidden" name="form_user" value="<?php echo (!$pun_user['is_guest']) ? pun_htmlspecialchars($pun_user['username']) : 'Guest';
+
+        ?>" /><strong><?php echo pun_htmlspecialchars($cur_topic['question']) ?></strong><br /><br />
+		<table style="WIDTH: auto; TABLE-LAYOUT: auto; TEXT-ALIGN: left; BORDER: 0; CELLSPACING: 0; CELLPADDING: 0;">
+		<?php
+        if ($ptype == 1) {
+            while (list($key, $value) = each($options)) {
+
+                ?>
+				<tr><td style="WIDTH: 10; BORDER: 0;"><input name="vote" <?php if (!$firstcheck) { echo "checked"; $firstcheck = true; }; ?> type="radio" value="<?php echo $key ?>"></td><td style="BORDER: 0; WIDTH: auto;"><span><?php echo pun_htmlspecialchars($value);
+
+                ?></span></td></tr>
+					<?php
+            } 
+        } elseif ($ptype == 2) {
+		            while (list($key, $value) = each($options)) {
+                ?>
+				<tr><td style="WIDTH: 10; BORDER: 0;"><input name="options[<?php echo $key ?>]" type="checkbox" value="1"></td><td style="BORDER: 0; WIDTH: auto;"><span><?php echo pun_htmlspecialchars($value);
+
+                ?></span></td></tr>
+					<?php
+            } 
+        } elseif ($ptype == 3) {
+				            while (list($key, $value) = each($options)) {
+                ?>
+				<tr><td style="WIDTH: auto; BORDER: 0;"><?php echo pun_htmlspecialchars($value); ?></td><td style="BORDER: 0; WIDTH: auto;"><input name="options[<?php echo $key ?>]" checked type="radio" value="yes"> <?php echo $cur_topic['yes']; ?></td><td style="BORDER: 0; WIDTH: auto;"><input name="options[<?php echo $key ?>]" type="radio" value="no"> <?php echo $cur_topic['no']; ?></td></tr>
+					<?php
+            } 
+        } else
+            message($lang_common['Bad request']);
+    } else {
+		$showsubmit = false;
+		?>
+				<div class="inform">
+				<div class="rbox" align="center">
+				<strong><?php echo pun_htmlspecialchars($cur_topic['question']) ?></strong><br /><br />
+				<table style="WIDTH: 70%; TABLE-LAYOUT: auto; TEXT-ALIGN: left; BORDER: 0; CELLSPACING: 0; CELLPADDING: 0;">
+		<?php
+    		if (!empty($cur_poll['votes']))
+    	    		$votes = unserialize($cur_poll['votes']);
+    		else
+          		$votes = array();
+		
+		if ($ptype == 1 || $ptype == 2) 
+		{
+			$total = 0;
+			$percent = 0;
+			$percent_int = 0;
+			while (list($key, $val) = each($options)) 
+			{
+				if (isset($votes[$key]))
+					$total += $votes[$key];
+			}
+			reset($options);
+		}
+		
+	  	while (list($key, $value) = each($options)) {    
+
+			if ($ptype == 1 || $ptype == 2)
+			{ 
+				if (isset($votes[$key]))
+				{
+					$percent =  $votes[$key] * 100 / $total;
+					$percent_int = floor($percent);
+				}
+			?>
+				<tr><td style="WIDTH: auto; BORDER: 0;"><?php echo pun_htmlspecialchars($value); ?></td> <td style="BORDER: 0; WIDTH: 45%;"><h2 style="width: <?php if (isset($votes[$key])) echo $percent_int; else echo "0"; ?>%; font-size: 1px; height: 2px; margin-bottom: 3px"></h2></td> <td style="BORDER: 0; WIDTH: 20%;"> <?php if (isset($votes[$key])) echo $percent_int . "% - " . $votes[$key]; else echo "0% - 0"; ?></td></tr>
+			<?php
+			}
+			else if ($ptype == 3) 
+			{ 
+				$total = 0;
+				$yes_percent = 0;
+				$no_percent = 0;
+				$vote_yes = 0;
+				$vote_no = 0;
+				if (isset($votes[$key]['yes']))
+				{
+					$vote_yes = $votes[$key]['yes'];
+				}
+
+				if (isset($votes[$key]['no'])) {
+					$vote_no += $votes[$key]['no'];
+				}
+
+				$total = $vote_yes + $vote_no;
+				if (isset($votes[$key]))
+				{
+					$yes_percent =   floor($vote_yes * 100 / $total);
+					$no_percent = floor($vote_no * 100 / $total);
+				}
+
+	
+			?>
+				<tr><td style="WIDTH: auto; BORDER: 0;">
+				<?php echo pun_htmlspecialchars($value); ?></td>
+				<td style="BORDER: 0; WIDTH: auto;"><b><?php echo $cur_topic['yes']; ?></b></td>
+				<td style="BORDER: 0; WIDTH: 22%;"><h2 style="width: <?php if (isset($votes[$key])) echo $yes_percent; else echo "0"; ?>%; font-size: 1px; height: 2px; margin-bottom: 3px"></h2></td>
+				<td style="BORDER: 0; WIDTH: auto;">
+				<?php 
+				if (isset($votes[$key]['yes'])) 
+					echo $yes_percent . "% - " . $votes[$key]['yes']; 
+				else 
+					echo "0% - " . 0; 
+				?> 
+				</td>
+				<td style="BORDER: 0; WIDTH: auto;"><b><?php echo $cur_topic['no']; ?></b></td>
+				<td style="BORDER: 0; WIDTH: 22%;"><h2 style="width: <?php if (isset($votes[$key])) echo $no_percent; else echo "0"; ?>%; font-size: 1px; height: 2px; margin-bottom: 3px"></h2></td>
+				<td style="BORDER: 0; WIDTH: auto;">
+				<?php 
+					if (isset($votes[$key]['no'])) 
+						echo $no_percent . "% - " . $votes[$key]['no']; 
+					else 
+						echo "0% - " . 0; 
+				?> 
+				</td>
+				
+				</tr>
+				
+				</tr>
+		<?php }
+			else
+			message($lang_common['Bad request']);
+            } 	
+	?><tr>
+				<td colspan="7" style="WIDTH: auto; BORDER: 0;">
+				<center><?php echo $lang_polls['Total'].":".$total; ?></center>
+				</td> <?php 
+    } 
+
+    ?>				</table>
+			</div>
+				
+			</div>
+
+			<?php if ($showsubmit == true) { ?>
+				<p align="center"><input type="submit" name="submit" tabindex="2" value="<?php echo $lang_common['Submit'] ?>" accesskey="s" /> <input type="submit" name="null" tabindex="2" value="<?php echo $lang_polls['Null vote'] ?>" accesskey="n" /></p>
+			<?php } ?>
+		</form>
+	</div>
+</div>
+<?php
+// Retrieve the posts (and their respective poster/online status)
+$result = $db->query('SELECT DISTINCT u.email, u.title, u.url, u.location, u.use_avatar, u.signature, u.email_setting, u.num_posts, u.registered, u.admin_note, p.id, p.poster AS username, p.poster_id, p.poster_ip, p.poster_email, p.message, p.hide_smilies, p.posted, p.edited, p.edited_by, g.g_id, g.g_user_title, o.user_id AS is_online FROM ' . $db->prefix . 'posts AS p INNER JOIN ' . $db->prefix . 'users AS u ON u.id=p.poster_id INNER JOIN ' . $db->prefix . 'groups AS g ON g.g_id=u.group_id LEFT JOIN ' . $db->prefix . 'online AS o ON (o.user_id=u.id AND o.idle=0) WHERE p.topic_id=' . $id . ' AND p.message<>\'\' ORDER BY p.id LIMIT ' . $start_from . ',' . $pun_user['disp_posts'], true) or error('Unable to fetch post info', __FILE__, __LINE__, $db->error());
+
+while ($cur_post = $db->fetch_assoc($result)) {
+    $post_count++;
+    $user_avatar = '';
+    $user_info = array();
+    $user_contacts = array();
+    $post_actions = array();
+    $is_online = '';
+    $signature = ''; 
+    // If the poster is a registered user.
+    if ($cur_post['poster_id'] > 1) 
+	{
+        $username = '<a href="profile.php?id=' . $cur_post['poster_id'] . '">' . pun_htmlspecialchars($cur_post['username']) . '</a>';
+        $user_title = get_title($cur_post);
+
+        if ($pun_config['o_censoring'] == '1')
+            $user_title = censor_words($user_title); 
+        // Format the online indicator
+        $is_online = ($cur_post['is_online'] == $cur_post['poster_id']) ? '<strong>' . $lang_topic['Online'] . '</strong>' : $lang_topic['Offline'];
+
+        if ($pun_config['o_avatars'] == '1' && $cur_post['use_avatar'] == '1' && $pun_user['show_avatars'] != '0') {
+            if ($img_size = @getimagesize($pun_config['o_avatars_dir'] . '/' . $cur_post['poster_id'] . '.gif'))
+                $user_avatar = '<img src="' . $pun_config['o_avatars_dir'] . '/' . $cur_post['poster_id'] . '.gif" ' . $img_size[3] . ' alt="" />';
+            else if ($img_size = @getimagesize($pun_config['o_avatars_dir'] . '/' . $cur_post['poster_id'] . '.jpg'))
+                $user_avatar = '<img src="' . $pun_config['o_avatars_dir'] . '/' . $cur_post['poster_id'] . '.jpg" ' . $img_size[3] . ' alt="" />';
+            else if ($img_size = @getimagesize($pun_config['o_avatars_dir'] . '/' . $cur_post['poster_id'] . '.png'))
+                $user_avatar = '<img src="' . $pun_config['o_avatars_dir'] . '/' . $cur_post['poster_id'] . '.png" ' . $img_size[3] . ' alt="" />';
+        } else
+            $user_avatar = ''; 
+        // We only show location, register date, post count and the contact links if "Show user info" is enabled
+        if ($pun_config['o_show_user_info'] == '1') {
+            if ($cur_post['location'] != '') {
+                if ($pun_config['o_censoring'] == '1')
+                    $cur_post['location'] = censor_words($cur_post['location']);
+
+                $user_info[] = '<dd>' . $lang_topic['From'] . ': ' . pun_htmlspecialchars($cur_post['location']);
+            } 
+
+            $user_info[] = '<dd>' . $lang_common['Registered'] . ': ' . date($pun_config['o_date_format'], $cur_post['registered']);
+
+            if ($pun_config['o_show_post_count'] == '1' || $is_admmod)
+                $user_info[] = '<dd>' . $lang_common['Posts'] . ': ' . $cur_post['num_posts']; 
+            // Now let's deal with the contact links (E-mail and URL)
+            if (($cur_post['email_setting'] == '0' && !$pun_user['is_guest']) || $pun_user['g_id'] < PUN_GUEST)
+                $user_contacts[] = '<a href="mailto:' . $cur_post['email'] . '">' . $lang_common['E-mail'] . '</a>';
+            else if ($cur_post['email_setting'] == '1' && !$pun_user['is_guest'])
+                $user_contacts[] = '<a href="misc.php?email=' . $cur_post['poster_id'] . '">' . $lang_common['E-mail'] . '</a>';
+		if ($cur_post['url'] != '')
+                $user_contacts[] = '<a href="' . pun_htmlspecialchars($cur_post['url']) . '">' . $lang_topic['Website'] . '</a>';
+        } 
+
+        if ($pun_user['g_id'] < PUN_GUEST) {
+            $user_info[] = '<dd>IP: <a href="moderate.php?get_host=' . $cur_post['id'] . '">' . $cur_post['poster_ip'] . '</a>';
+
+            if ($cur_post['admin_note'] != '')
+                $user_info[] = '<dd>' . $lang_topic['Note'] . ': <strong>' . pun_htmlspecialchars($cur_post['admin_note']) . '</strong>';
+        }
+		else
+		{
+			$user_info[] = '<dd>IP: '.$cur_post['poster_ip'];
+		}
+    } 
+    // If the poster is a guest (or a user that has been deleted)
+    else {
+        $username = pun_htmlspecialchars($cur_post['username']);
+        $user_title = get_title($cur_post);
+
+        if ($pun_user['g_id'] < PUN_GUEST)
+            $user_info[] = '<dd>IP: <a href="moderate.php?get_host=' . $cur_post['id'] . '">' . $cur_post['poster_ip'] . '</a>';
+		else
+			$user_info[] = '<dd>IP: '.$cur_post['poster_ip'];
+
+        if ($pun_config['o_show_user_info'] == '1' && $cur_post['poster_email'] != '' && !$pun_user['is_guest'])
+            $user_contacts[] = '<a href="mailto:' . $cur_post['poster_email'] . '">' . $lang_common['E-mail'] . '</a>';
+
+    } 
+    // Generation post action array (quote, edit, delete etc.)
+    if (!$is_admmod) {
+        if (!$pun_user['is_guest'])
+	    $post_actions[] = '<li class="postreport"><a href="misc.php?report='.$cur_post['id'].'">'.$lang_topic['Report'].'</a>';
+
+
+        if ($cur_topic['closed'] == '0') {
+            if ($cur_post['poster_id'] == $pun_user['id']) {
+                				if ((($start_from + $post_count) == 1 && $pun_user['g_delete_topics'] == '1') || (($start_from + $post_count) > 1 && $pun_user['g_delete_posts'] == '1'))
+					$post_actions[] = '<li class="postdelete"><a href="delete.php?id='.$cur_post['id'].'">'.$lang_topic['Delete'].'</a>';
+				if ($pun_user['g_edit_posts'] == '1')
+					$post_actions[] = '<li class="postedit"><a href="edit.php?id='.$cur_post['id'].'">'.$lang_topic['Edit'].'</a>';
+			}
+
+			if (($cur_topic['post_replies'] == '' && $pun_user['g_post_replies'] == '1') || $cur_topic['post_replies'] == '1')
+				$post_actions[] = '<li class="postquote"><a href="poll.php?tid='.$id.'&amp;qid='.$cur_post['id'].'">'.$lang_topic['Quote'].'</a>';
+		}
+	}
+	else
+		$post_actions[] = '<li class="postreport"><a href="misc.php?report='.$cur_post['id'].'">'.$lang_topic['Report'].'</a>'.$lang_topic['Link separator'].'</li><li class="postdelete"><a href="delete.php?id='.$cur_post['id'].'">'.$lang_topic['Delete'].'</a>'.$lang_topic['Link separator'].'</li><li class="postedit"><a href="edit.php?id='.$cur_post['id'].'">'.$lang_topic['Edit'].'</a>'.$lang_topic['Link separator'].'</li><li class="postquote"><a href="poll.php?tid='.$id.'&amp;qid='.$cur_post['id'].'">'.$lang_topic['Quote'].'</a>';
+ 
+    // Switch the background color for every message.
+    $bg_switch = ($bg_switch) ? $bg_switch = false : $bg_switch = true;
+    $vtbg = ($bg_switch) ? ' roweven' : ' rowodd'; 
+    // Perform the main parsing of the message (BBCode, smilies, censor words etc)
+    $cur_post['message'] = parse_message($cur_post['message'], $cur_post['hide_smilies']); 
+    // Do signature parsing/caching
+    if ($cur_post['signature'] != '' && $pun_user['show_sig'] != '0') {
+        if (isset($signature_cache[$cur_post['poster_id']]))
+            $signature = $signature_cache[$cur_post['poster_id']];
+        else {
+            $signature = parse_signature($cur_post['signature']);
+            $signature_cache[$cur_post['poster_id']] = $signature;
+        } 
+    } 
+
+    ?>
+<div id="p<?php echo $cur_post['id'] ?>" class="blockpost<?php echo $vtbg ?><?php if (($post_count + $start_from) == 1) echo ' firstpost';?>">
+	<h2><span><span class="conr">#<?php echo ($start_from + $post_count) ?>&nbsp;</span><a href="viewpoll.php?pid=<?php echo $cur_post['id'] . '#p' . $cur_post['id'] ?>"><?php echo format_time($cur_post['posted']) ?></a></span></h2>
+	<div class="box">
+		<div class="inbox">
+			<div class="postleft">
+				<dl>
+					<dt><strong><?php echo $username ?></strong></dt>
+					<dd class="usertitle"><strong><?php echo $user_title ?></strong></dd>
+					<dd class="postavatar"><?php echo $user_avatar ?></dd>
+<?php if (count($user_info)) echo "\t\t\t\t\t".implode('</dd>'."\n\t\t\t\t\t", $user_info).'</dd>'."\n"; ?>
+<?php if (count($user_contacts)) echo "\t\t\t\t\t".'<dd class="usercontacts">'.implode('&nbsp;&nbsp;', $user_contacts).'</dd>'."\n";  ?>
+				</dl>
+			</div>
+			<div class="postright">
+				<h3><?php if (($post_count + $start_from) > 1) echo ' Re: ';?><?php echo pun_htmlspecialchars($cur_topic['subject']) ?></h3>
+				<div class="postmsg">
+					<?php echo $cur_post['message'] . "\n" ?>
+<?php if ($cur_post['edited'] != '') echo "\t\t\t\t\t" . '<p class="postedit"><em>' . $lang_topic['Last edit'] . ' ' . pun_htmlspecialchars($cur_post['edited_by']) . ' (' . format_time($cur_post['edited']) . ')</em></p>' . "\n";?>
+				</div>
+<?php if ($signature != '') echo "\t\t\t\t".'<div class="postsignature"><hr />'.$signature.'</div>'."\n"; ?>
+			</div>
+			<div class="clearer"></div>
+			<div class="postfootleft"><?php if ($cur_post['poster_id'] > 1) echo '<p>'.$is_online.'</p>'; ?></div>
+
+			<div class="postfootright"><?php echo (count($post_actions)) ? '<ul>' . implode($lang_topic['Link separator'] . '</li>', $post_actions) . '</li></ul></div>' . "\n" : '<div>&nbsp;</div></div>' . "\n" ?>
+		</div>
+	</div>
+</div>
+
+<?php
+
+} 
+
+?>
+<div class="postlinksb">
+	<div class="inbox">
+		<p class="postlink conr"><?php echo $post_link ?></p>
+		<p class="pagelink conl"><?php echo $paging_links ?></p>
+		<ul><li><a href="index.php"><?php echo $lang_common['Index'] ?></a></li><li>&nbsp;&raquo;&nbsp;<a href="viewforum.php?id=<?php echo $cur_topic['forum_id'] ?>"><?php echo pun_htmlspecialchars($cur_topic['forum_name']) ?></a></li><li>&nbsp;&raquo;&nbsp;<?php echo pun_htmlspecialchars($cur_topic['subject']) ?></li></ul>
+		<?php echo $subscraction ?>
+
+	</div>
+</div>
+
+<?php 
+// Display quick post if enabled
+if ($quickpost) {
+
+    ?>
+<div class="blockform">
+	<h2><span><?php echo $lang_topic['Quick post'] ?></span></h2>
+	<div class="box">
+		<form method="post" action="poll.php?tid=<?php echo $id ?>" onsubmit="this.submit.disabled=true;if(process_form(this)){return true;}else{this.submit.disabled=false;return false;}">
+			<div class="inform">
+				<fieldset>
+					<legend><?php echo $lang_common['Write message legend'] ?></legend>
+					<div class="infldset txtarea">
+						<input type="hidden" name="form_sent" value="1" />
+						<input type="hidden" name="form_user" value="<?php echo (!$pun_user['is_guest']) ? pun_htmlspecialchars($pun_user['username']) : 'Guest';?>" />
+						<label><textarea name="req_message" rows="7" cols="75" tabindex="1"></textarea></label>
+						<ul class="bblinks">
+							<li><a href="help.php#bbcode" onclick="window.open(this.href); return false;"><?php echo $lang_common['BBCode'] ?></a>: <?php echo ($pun_config['p_message_bbcode'] == '1') ? $lang_common['on'] : $lang_common['off'];?></li>
+							<li><a href="help.php#img" onclick="window.open(this.href); return false;"><?php echo $lang_common['img tag'] ?></a>: <?php echo ($pun_config['p_message_img_tag'] == '1') ? $lang_common['on'] : $lang_common['off'];?></li>
+							<li><a href="help.php#smilies" onclick="window.open(this.href); return false;"><?php echo $lang_common['Smilies'] ?></a>: <?php echo ($pun_config['o_smilies'] == '1') ? $lang_common['on'] : $lang_common['off'];?></li>
+						</ul>
+					</div>
+				</fieldset>
+			</div>
+			<p><input type="submit" name="submit" tabindex="2" value="<?php echo $lang_common['Submit'] ?>" accesskey="s" /></p>
+		</form>
+	</div>
+</div>
+<?php
+
+} 
+// Increment "num_views" for topic
+$low_prio = ($db_type == 'mysql') ? 'LOW_PRIORITY ' : '';
+$db->query('UPDATE ' . $low_prio . $db->prefix . 'topics SET num_views=num_views+1 WHERE id=' . $id) or error('Unable to update topic', __FILE__, __LINE__, $db->error());
+
+$forum_id = $cur_topic['forum_id'];
+$footer_style = 'viewpoll';
+require PUN_ROOT . 'footer.php';
diff -wbBurN upload/vote.php upload.my/vote.php
--- upload/vote.php	1970-01-01 03:00:00 +0300
+++ upload.my/vote.php	2006-12-06 14:49:41 +0300
@@ -0,0 +1,170 @@
+<?php
+/***********************************************************************
+
+  Caleb Champlin (med_mediator@hotmail.com)
+
+  This file is is a modification of a file from of PunBB.
+
+************************************************************************/
+
+/***********************************************************************
+
+  Copyright (C) 2002-2005  Rickard Andersson (rickard@punbb.org)
+
+  This file is part of PunBB.
+
+  PunBB is free software; you can redistribute it and/or modify it
+  under the terms of the GNU General Public License as published
+  by the Free Software Foundation; either version 2 of the License,
+  or (at your option) any later version.
+
+  PunBB is distributed in the hope that it will be useful, but
+  WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+  MA  02111-1307  USA
+
+************************************************************************/
+
+define('PUN_ROOT', './');
+require PUN_ROOT.'include/common.php';
+
+
+if ($pun_user['g_read_board'] == '0')
+	message($lang_common['No view']);
+
+
+$pollid = isset($_POST['poll_id']) ? intval($_POST['poll_id']) : 0;
+if ($pollid < 1)
+	message($lang_common['Bad request']);
+
+// Fetch some info about the poll
+$result = $db->query('SELECT f.id, f.forum_name, f.moderators, f.redirect_url, fp.post_replies, fp.post_topics, t.subject, t.closed, poll.ptype, poll.options, poll.voters, poll.votes FROM '.$db->prefix.'polls AS poll RIGHT JOIN '.$db->prefix.'topics AS t ON poll.pollid=t.id INNER JOIN '.$db->prefix.'forums AS f ON f.id=t.forum_id LEFT JOIN '.$db->prefix.'forum_perms AS fp ON (fp.forum_id=f.id AND fp.group_id='.$pun_user['g_id'].') WHERE (fp.read_forum IS NULL OR fp.read_forum=1) AND t.id='.$pollid) or error('Unable to fetch topic and poll info', __FILE__, __LINE__, $db->error());
+
+if (!$db->num_rows($result))
+	message($lang_common['Bad request']);
+
+$cur_poll = $db->fetch_assoc($result);
+
+// Sort out who the moderators are and if we are currently a moderator (or an admin)
+$mods_array = ($cur_poll['moderators'] != '') ? unserialize($cur_poll['moderators']) : array();
+$is_admmod = ($pun_user['g_id'] == PUN_ADMIN || ($pun_user['g_id'] == PUN_MOD && array_key_exists($pun_user['username'], $mods_array))) ? true : false;
+
+// Do we have permission to vote?
+if ((((($cur_poll['post_replies'] == '' && $pun_user['g_post_replies'] == '0') || $cur_poll['post_replies'] == '0')) ||
+	(isset($cur_poll['closed']) && $cur_poll['closed'] == '1')) &&
+	!$is_admmod)
+	message($lang_common['No permission']);
+
+
+// Letting guests vote is silly and undermines the whole purpose of a poll
+if ($pun_user['is_guest'])
+	message($lang_common['No permission']);
+
+// Load the polls.php language file
+require PUN_ROOT.'lang/'.$pun_user['language'].'/polls.php';
+
+if (isset($_POST['form_sent']))
+{
+	
+	// Make sure form_user is correct
+	if ($pun_user['is_guest'] || $_POST['form_user'] != $pun_user['username'])
+		message($lang_common['Bad request']);
+
+
+    // Grab the options for the poll
+    $options = unserialize($cur_poll['options']);
+    
+    // If there have already been voters grab them and their respective voters
+    if (!empty($cur_poll['voters']))
+        $voters = unserialize($cur_poll['voters']);
+    else
+        $voters = array();
+
+    if (!empty($cur_poll['votes']))
+        $votes = unserialize($cur_poll['votes']);
+    else
+        $votes = array();
+
+
+    // Get the poll type
+    $ptype = $cur_poll['ptype'];
+
+    // Check if the person has already voted
+    if (in_array($pun_user['id'], $voters))
+	message($lang_polls['Already voted']);
+
+    // Did they submit a null vote?
+    if (empty($_POST['null']))
+    {
+
+       
+        // Based on the poll type increate the value
+    	if ($ptype == 1)
+	{
+		$myvote = intval(trim($_POST['vote']));
+		if ((empty($myvote)) || (!array_key_exists($myvote, $options)))			
+			message($lang_common['Bad request']);
+
+		// Don't ask blame phps silly error checking ;)
+		if (isset($votes[$myvote]))
+			$votes[$myvote]++;
+		else
+			$votes[$myvote] = 1;
+	}
+	else if ($ptype == 2) 
+	{
+		while (list($key, $value) = each($_POST['options'])) 
+		{
+            		if (!empty($value) && array_key_exists($key, $options)) 
+			{
+				if (isset($votes[$key]))
+					$votes[$key]++;
+				else
+					$votes[$key] = 1;
+            		} 
+        	}
+	}
+	else if ($ptype == 3) 
+	{
+		while (list($key, $value) = each($_POST['options'])) 
+		{
+           		if (!empty($value) && array_key_exists($key, $options)) 
+			{
+				if ($value == "yes")
+				{
+					if (isset($votes[$key]['yes']))
+						$votes[$key]['yes']++;
+					else
+						$votes[$key]['yes'] = 1;
+				}
+				else
+				{
+					if (isset($votes[$key]['no']))
+						$votes[$key]['no']++;
+					else
+						$votes[$key]['no'] = 1;
+            			}
+			} 	
+        	}
+	} else
+		message($lang_common['Bad request']);
+		
+   }
+	// Add the voter to the voters array
+	$voters[] = $pun_user['id'];
+	// Serialize the array
+	$voters_serialized = serialize($voters);
+	// Same with the votes
+	$votes_serialized = serialize($votes);
+	
+	// Update the database.
+	$db->query('UPDATE '.$db->prefix.'polls SET votes=\''.$votes_serialized.'\', voters=\''.$voters_serialized.'\' WHERE pollid='.$pollid) or error('Unable to update poll', __FILE__, __LINE__, $db->error());
+
+	redirect('viewpoll.php?id='.$pollid, $lang_polls['Vote success']);
+} else
+	message($lang_common['Bad request']);
