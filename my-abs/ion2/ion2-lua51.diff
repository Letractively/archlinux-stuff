diff -wbBur ion-2/configure.ac ion-2.my/configure.ac
--- ion-2/configure.ac	2006-05-25 10:35:36.000000000 -0700
+++ ion-2.my/configure.ac	2006-05-24 19:15:15.000000000 -0700
@@ -235,50 +235,14 @@
 elif test "x$with_lua" != x; then
     LUA_LIBS="-L$with_lua_prefix/lib"
 fi
+LUA_LIBS="$LUA_LIBS -lm -ldl"
 AC_CHECK_LIB([lua$with_lua_suffix],
-             [lua_open],
+             [luaL_newstate],
              [LUA_LIBS="$LUA_LIBS -llua$with_lua_suffix"],
              [exit 1],
              [$LUA_LIBS])
 AC_CHECK_LIB([dl], [dlopen], [lua_extra_libs="$lua_extra_libs -ldl"], [])
 AC_CHECK_LIB([m], [exp], [lua_extra_libs="$lua_extra_libs -lm"], [])
-AC_CHECK_LIB([lualib$with_lua_suffix],
-             [luaopen_loadlib],
-             [LUA_LIBS="$LUA_LIBS $lua_extra_libs -llualib$with_lua_suffix"],
-             [exit 1],
-             [$LUA_LIBS $lua_extra_libs])
-dnl }}}
-
-dnl liblua_version {{{
-AC_MSG_CHECKING([for liblua version >= 5.0])
-save_CFLAGS="$CFLAGS"
-save_LIBS="$LIBS"
-CFLAGS="$CFLAGS $LUA_INCLUDES"
-LIBS="$LIBS $LUA_LIBS"
-AC_RUN_IFELSE([AC_LANG_SOURCE([[
-
-#include <lua.h>
-#include <stdlib.h>
-#include <string.h>
-
-int main()
-{
-    if(strcmp(lua_version(), LUA_VERSION)!=0){
-        printf("Error: lua_version() does not match LUA_VERSION. ");
-        exit(EXIT_FAILURE);
-    }
-    printf("(found %s)... ", lua_version());
-    if(strcmp(lua_version(), "Lua 5.0")<0)
-        exit(EXIT_FAILURE);
-    exit(EXIT_SUCCESS);
-}
-
-]])],
-              [AC_MSG_RESULT([yes])],
-              [AC_MSG_RESULT([no])
-               exit 1])
-CFLAGS="$save_CFLAGS"
-LIBS="$save_LIBS"
 dnl }}}
 
 dnl }}}
diff -wbBur ion-2/de/delib.lua ion-2.my/de/delib.lua
--- ion-2/de/delib.lua	2006-05-25 10:35:36.000000000 -0700
+++ ion-2.my/de/delib.lua	2006-05-25 10:18:53.000000000 -0700
@@ -10,10 +10,10 @@
 -- (at your option) any later version.
 --
 
--- This is a slight abuse of the _LOADED variable perhaps, but library-like 
+-- This is a slight abuse of the package.loaded variable perhaps, but library-like 
 -- packages should handle checking if they're loaded instead of confusing 
 -- the user with require/include differences.
-if _LOADED["delib"] then return end
+if package.loaded["delib"] then return end
 
 
 local stylecache={}
@@ -35,7 +35,7 @@
         return false
     end
 
-    for k, v in stylecache[list.based_on] do
+    for k, v in pairs(stylecache[list.based_on]) do
         if type(k)=="number" then
             if type(v)=="table" then
                 if v.substyle_pattern then
@@ -82,7 +82,7 @@
     
     stylecache[name]=list
     
-    for xscr, rootwin in root_windows() do
+    for xscr, rootwin in pairs(root_windows()) do
         if not de_do_define_style(rootwin, name, list) then
             break
         end
@@ -118,4 +118,4 @@
 
 
 -- Mark ourselves loaded.
-_LOADED["delib"]=true
+package.loaded["delib"]=true
diff -wbBur ion-2/luaextl/luaextl.c ion-2.my/luaextl/luaextl.c
--- ion-2/luaextl/luaextl.c	2006-05-25 10:35:36.000000000 -0700
+++ ion-2.my/luaextl/luaextl.c	2006-05-25 10:09:17.000000000 -0700
@@ -510,13 +510,16 @@
         return FALSE;
     }
 
+#if 0
     luaopen_base(l_st);
     luaopen_table(l_st);
     luaopen_io(l_st);
     luaopen_string(l_st);
     luaopen_math(l_st);
-    luaopen_loadlib(l_st);
-    
+    luaopen_package(l_st);
+#else
+    luaL_openlibs(l_st);
+#endif
     if(!extl_init_obj_info(l_st)){
         warn("Failed to initialize WObj metatable\n");
         goto fail;
diff -wbBur ion-2/menu/menulib.lua ion-2.my/menu/menulib.lua
--- ion-2/menu/menulib.lua	2006-05-25 10:35:36.000000000 -0700
+++ ion-2.my/menu/menulib.lua	2006-05-25 10:18:14.000000000 -0700
@@ -9,10 +9,10 @@
 -- (at your option) any later version.
 --
 
--- This is a slight abuse of the _LOADED variable perhaps, but library-like 
+-- This is a slight abuse of the package.loaded variable perhaps, but library-like 
 -- packages should handle checking if they're loaded instead of confusing 
 -- the user with require/include differences.
-if _LOADED["menulib"] then return end
+if package.loaded["menulib"] then return end
 
 
 -- Table to hold defined menus.
@@ -239,7 +239,7 @@
         if table.getn(dirs)==0 then
             return
         end
-        for _, s in dirs do
+        for _, s in pairs(dirs) do
             cmd=cmd.." "..string.shell_safe(s.."/look-")
         end
         
@@ -254,4 +254,4 @@
 
 
 -- Mark ourselves loaded.
-_LOADED["menulib"]=true
+package.loaded["menulib"]=true
diff -wbBur ion-2/mkexports.lua ion-2.my/mkexports.lua
--- ion-2/mkexports.lua	2006-05-25 10:35:36.000000000 -0700
+++ ion-2.my/mkexports.lua	2006-05-24 18:53:49.000000000 -0700
@@ -54,7 +54,7 @@
     ["uint"] = "i",
 }
 
-for d, t in desc2ct do
+for d, t in pairs(desc2ct) do
     ct2desc[t]=d
 end
 
@@ -111,7 +111,7 @@
         end
     end
     
-    for cls in classes do
+    for cls in pairs(classes) do
         insert(cls)
     end
     
@@ -375,7 +375,7 @@
     -- end blockwrite
 
     -- Generate type checking code
-    for k, t in info.itypes do
+    for k, t in pairs(info.itypes) do
         if t~="" then
             fprintf(h, "    if(!chko(in, %d, &OBJDESCR(%s))) return FALSE;\n",
                     k-1, t)
@@ -404,7 +404,7 @@
         fprintf(h, "\n\nstatic ExtlExportedFnSpec %s_exports[] = {\n", cls)
     end
     
-    for fn, info in data.fns do
+    for fn, info in pairs(data.fns) do
         local ods, ids="NULL", "NULL"
         if info.odesc~="v" then
             ods='"' .. info.odesc .. '"'
@@ -433,7 +433,7 @@
     -- end blockwrite
 
     -- Write class infos
-    for c, data in classes do
+    for c, data in pairs(classes) do
         -- WObj is defined in obj.h which we include.
         if c~="" then
             fprintf(h, "INTROBJ(%s);\n", c)
@@ -460,16 +460,16 @@
     -- end blockwrite
     
     -- Write L2 call handlers
-    for name, info in chnds do
+    for name, info in pairs(chnds) do
         writechnd(h, name, info)
     end
     
     fprintf(h, "\n")
     
-    for cls, data in classes do
+    for cls, data in pairs(classes) do
         if data.fns then
             -- Write function declarations
-            for fn in data.fns do
+            for fn in pairs(data.fns) do
                 fprintf(h, "extern void %s();\n", fn)
             end
             -- Write function table
@@ -481,7 +481,7 @@
 
     local sorted_classes=sort_classes()
     
-    for _, cls in sorted_classes do
+    for _, cls in pairs(sorted_classes) do
         if cls=="" then
             fprintf(h, "    if(!extl_register_functions(exports)) return FALSE;\n");
         elseif classes[cls].fns then
@@ -496,7 +496,7 @@
     fprintf(h, "    return TRUE;\n}\n\nvoid %s_unregister_exports()\n{\n", 
             module);
     
-    for _, cls in sorted_classes do
+    for _, cls in pairs(sorted_classes) do
         if cls=="" then
             fprintf(h, "    extl_unregister_functions(exports);\n");
         elseif classes[cls].fns then
@@ -569,7 +569,7 @@
         end
         fprintf(h, "%s(", fn);
         local comma=""
-        for i, varname in info.ivars do
+        for i, varname in pairs(info.ivars) do
             fprintf(h, comma .. "%s", tohuman(string.sub(info.idesc, i, i),
                                               info.itypes[i]))
             if varname then
@@ -676,7 +676,7 @@
     error("No inputs")
 end
 
-for _, ifnam in inputs do
+for _, ifnam in pairs(inputs) do
     h, err=io.open(ifnam, "r")
     if not h then
             errorf("Could not open %s: %s", ifnam, err)
diff -wbBur ion-2/query/querylib.lua ion-2.my/query/querylib.lua
--- ion-2/query/querylib.lua	2006-05-25 10:35:36.000000000 -0700
+++ ion-2.my/query/querylib.lua	2006-05-25 10:16:19.000000000 -0700
@@ -10,10 +10,10 @@
 --
 
 
--- This is a slight abuse of the _LOADED variable perhaps, but library-like 
+-- This is a slight abuse of the package.loaded variable perhaps, but library-like 
 -- packages should handle checking if they're loaded instead of confusing 
 -- the user with require/include differences.
-if _LOADED["querylib"] then return end
+if package.loaded["querylib"] then return end
 
 
 querylib={}
@@ -732,4 +732,4 @@
 
 
 -- Mark ourselves loaded.
-_LOADED["querylib"]=true
+package.loaded["querylib"]=true
diff -wbBur ion-2/share/ioncorelib.lua ion-2.my/share/ioncorelib.lua
--- ion-2/share/ioncorelib.lua	2006-05-25 10:35:37.000000000 -0700
+++ ion-2.my/share/ioncorelib.lua	2006-05-25 10:17:58.000000000 -0700
@@ -12,7 +12,7 @@
 -- This is a slight abuse of the _LOADED variable perhaps, but library-like 
 -- packages should handle checking if they're loaded instead of confusing 
 -- the user with require/include differences.
-if _LOADED["ioncorelib"] then return end
+if package.loaded["ioncorelib"] then return end
 
 -- Constants {{{
 
@@ -162,9 +162,9 @@
 
 local function alternative_winprop_idents(id)
     local function g()
-        for _, c in {id.class, "*"} do
-            for _, r in {id.role, "*"} do
-                for _, i in {id.instance, "*"} do
+        for _, c in pairs({id.class, "*"}) do
+            for _, r in pairs({id.role, "*"}) do
+                for _, i in pairs({id.instance, "*"}) do
                     coroutine.yield(c, r, i)
                 end
             end
@@ -183,7 +183,7 @@
         names={}
         pcall(function() names=winprops[c][r][i] or {} end)
         local match, matchl=names[0], 0
-        for name, prop in names do
+        for name, prop in pairs(names) do
             if type(name)=="string" then
                 local st, en=string.find(nm, name)
                 if st and en then
@@ -223,7 +223,7 @@
 function winprop(list)
     local list2, class, role, instance, name = {}, "*", "*", "*", 0
 
-    for k, v in list do
+    for k, v in pairs(list) do
     if k == "class" then
         class = v
         elseif k == "role" then
@@ -328,5 +328,4 @@
 
 
 -- Mark ourselves loaded.
-_LOADED["ioncorelib"]=true
-
+package.loaded["ioncorelib"]=true
